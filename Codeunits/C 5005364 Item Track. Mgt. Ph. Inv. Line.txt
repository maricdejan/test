OBJECT Codeunit 5005364 Item Track. Mgt. Ph. Inv. Line
{
  OBJECT-PROPERTIES
  {
    Date=05.11.08;
    Time=12:00:00;
    Version List=NAVDACH6.00;
  }
  PROPERTIES
  {
    Permissions=TableData 337=rimd,
                TableData 5005359=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text1140000@1140000 : TextConst 'DEU=Es sind Artikelverfolgungszeilen vorhanden. Bitte l”schen Sie alle, bevor Sie die Zeile „ndern.;ENU=Item Tracking Lines exist. Please delete all before changing line.';
      CreateReservEntry@1140001 : Codeunit 99000830;

    PROCEDURE SuggestUseTrackingLines@1140000(Item@1140000 : Record 27) : Boolean;
    VAR
      ItemTrackingCode@1140001 : Record 6502;
    BEGIN
      IF Item."Item Tracking Code" = '' THEN
        EXIT(FALSE);

      ItemTrackingCode.GET(Item."Item Tracking Code");

      EXIT(
        ItemTrackingCode."SN Specific Tracking" OR
        ItemTrackingCode."SN Pos. Adjmt. Inb. Tracking" OR
        ItemTrackingCode."SN Pos. Adjmt. Outb. Tracking" OR
        ItemTrackingCode."SN Neg. Adjmt. Inb. Tracking" OR
        ItemTrackingCode."SN Neg. Adjmt. Outb. Tracking" OR
        ItemTrackingCode."Lot Specific Tracking" OR
        ItemTrackingCode."Lot Pos. Adjmt. Inb. Tracking" OR
        ItemTrackingCode."Lot Pos. Adjmt. Outb. Tracking" OR
        ItemTrackingCode."Lot Neg. Adjmt. Inb. Tracking" OR
        ItemTrackingCode."Lot Neg. Adjmt. Outb. Tracking"
      );
    END;

    PROCEDURE GetTrackingNosFromWhse@1140001(Item@1140000 : Record 27) : Boolean;
    VAR
      ItemTrackingCode@1140001 : Record 6502;
    BEGIN
      IF Item."Item Tracking Code" = '' THEN
        EXIT(FALSE);

      ItemTrackingCode.GET(Item."Item Tracking Code");

      IF (ItemTrackingCode."SN Specific Tracking" AND ItemTrackingCode."SN Warehouse Tracking") OR
         (ItemTrackingCode."Lot Specific Tracking" AND ItemTrackingCode."Lot Warehouse Tracking")
      THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE LocationIsBinMandatory@1140002(LocationCode@1140000 : Code[20]) : Boolean;
    VAR
      Location@1140001 : Record 14;
    BEGIN
      IF LocationCode = '' THEN BEGIN
        EXIT(FALSE);
      END ELSE BEGIN
        Location.GET(LocationCode);
        EXIT(Location."Bin Mandatory");
      END;
    END;

    PROCEDURE TransferResEntryToItemJnlLine@1140003(VAR PhysInvtOrderLine@1140000 : Record 5005351;VAR ItemJnlLine@1140001 : Record 83;Qty@1140002 : Decimal;Positive@1140003 : Boolean);
    VAR
      ReservEntry@1140004 : Record 337;
      Status@1140005 : 'Reservation,Tracking,Surplus,Prospect';
      TransferLocation@1140006 : Code[10];
    BEGIN
      // Transfer all Reserve Entry, connected by a PhysInvtOrderLine, to an ItemJnlLine bevor posting the PhysInvtOrderLine

      IF Qty = 0 THEN
        EXIT;

      ItemJnlLine.TESTFIELD("Item No.", PhysInvtOrderLine."Item No.");
      ItemJnlLine.TESTFIELD("Variant Code", PhysInvtOrderLine."Variant Code");
      ItemJnlLine.TESTFIELD("Location Code", PhysInvtOrderLine."Location Code");
      ItemJnlLine.TESTFIELD("Bin Code", PhysInvtOrderLine."Bin Code");

      ReservEntry.RESET;
      ReservEntry.SETCURRENTKEY(
        "Source Type", "Source Subtype", "Source ID",
        "Source Batch Name", "Source Prod. Order Line",
        "Source Ref. No.");
      ReservEntry.SETRANGE("Source Type", DATABASE::"Phys. Inventory Order Line");
      ReservEntry.SETRANGE("Source Subtype", 0);
      ReservEntry.SETRANGE("Source ID", PhysInvtOrderLine."Document No.");
      ReservEntry.SETRANGE("Source Batch Name", '');
      ReservEntry.SETRANGE("Source Prod. Order Line", 0);
      ReservEntry.SETRANGE("Source Ref. No.", PhysInvtOrderLine."Line No.");
      ReservEntry.SETRANGE(Positive, Positive);
      IF ReservEntry.FIND('-') THEN REPEAT
        ReservEntry.TESTFIELD("Reservation Status", ReservEntry."Reservation Status"::Prospect);

        ReservEntry.TESTFIELD("Item No.", PhysInvtOrderLine."Item No.");
        ReservEntry.TESTFIELD("Variant Code", PhysInvtOrderLine."Variant Code");
        ReservEntry.TESTFIELD("Location Code",PhysInvtOrderLine."Location Code");
        ReservEntry."New Serial No." := ReservEntry."Serial No.";
        ReservEntry."New Lot No." := ReservEntry."Lot No.";

        Qty :=
          CreateReservEntry.TransferReservEntry(
            DATABASE::"Item Journal Line",
            ItemJnlLine."Entry Type",
            ItemJnlLine."Journal Template Name",
            ItemJnlLine."Journal Batch Name",
            0,
            ItemJnlLine."Line No.",
            ItemJnlLine."Qty. per Unit of Measure",
            ReservEntry,
            Qty);
      UNTIL (ReservEntry.NEXT = 0) OR (Qty = 0);
    END;

    BEGIN
    END.
  }
}

