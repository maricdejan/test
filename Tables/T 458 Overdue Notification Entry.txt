OBJECT Table 458 Overdue Notification Entry
{
  OBJECT-PROPERTIES
  {
    Date=05.11.08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=F„lligkeitsbenachrichtigung;
               ENU=Overdue Notification Entry];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[DEU=Tabellen-ID;
                                                              ENU=Table ID] }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=Angebot,Auftrag,Rechnung,Gutschrift,Rahmenauftrag,Reklamation;
                                                                    ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation=IF (Table ID=CONST(36)) "Sales Header".No. WHERE (Document Type=FIELD(Document Type))
                                                                 ELSE IF (Table ID=CONST(38)) "Purchase Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.] }
    { 4   ;   ;Sent to ID          ;Code20        ;TableRelation="User Setup";
                                                   CaptionML=[DEU=ID des Ziels;
                                                              ENU=Sent to ID] }
    { 5   ;   ;Sent Time           ;Time          ;CaptionML=[DEU=Sendeuhrzeit;
                                                              ENU=Sent Time] }
    { 6   ;   ;Sent Date           ;Date          ;CaptionML=[DEU=Sendedatum;
                                                              ENU=Sent Date] }
    { 7   ;   ;E-Mail              ;Text100       ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[DEU=E-Mail;
                                                              ENU=E-Mail] }
    { 8   ;   ;Sent to Name        ;Text30        ;CaptionML=[DEU=Name des Ziels;
                                                              ENU=Sent to Name] }
    { 9   ;   ;Sequence No.        ;Integer       ;CaptionML=[DEU=Reihenfolge;
                                                              ENU=Sequence No.] }
    { 10  ;   ;Due Date            ;Date          ;CaptionML=[DEU=F„lligkeitsdatum;
                                                              ENU=Due Date] }
    { 11  ;   ;Approver ID         ;Code20        ;CaptionML=[DEU=Genehmiger-ID;
                                                              ENU=Approver ID] }
    { 12  ;   ;Approval Code       ;Code20        ;CaptionML=[DEU=Genehmigungscode;
                                                              ENU=Approval Code] }
    { 13  ;   ;Approval Type       ;Option        ;CaptionML=[DEU=Genehmigungsart;
                                                              ENU=Approval Type];
                                                   OptionCaptionML=[DEU=" ,Verk„ufer/Eink„ufer,Genehmiger";
                                                                    ENU=" ,Sales Pers./Purchaser,Approver"];
                                                   OptionString=[ ,Sales Pers./Purchaser,Approver] }
    { 14  ;   ;Limit Type          ;Option        ;CaptionML=[DEU=Einschr„nkungsart;
                                                              ENU=Limit Type];
                                                   OptionCaptionML=[DEU=Genehmigungsgrenzwerte,Kreditlimits,Anforderungslimits,Keine Einschr„nkungen;
                                                                    ENU=Approval Limits,Credit Limits,Request Limits,No Limits];
                                                   OptionString=Approval Limits,Credit Limits,Request Limits,No Limits }
  }
  KEYS
  {
    {    ;Table ID,Document Type,Document No.,Sequence No.,Sent Date,Sent Time;
                                                   Clustered=Yes }
    {    ;Approver ID                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ShowDocument@1();
    VAR
      SalesHeader@1001 : Record 36;
      PurchHeader@1000 : Record 38;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Sales Header":
          BEGIN
            IF NOT SalesHeader.GET("Document Type","Document No.") THEN
              EXIT;
            CASE "Document Type" OF
              "Document Type"::Quote:
                FORM.RUN(FORM::"Sales Quote",SalesHeader);
              "Document Type"::Order:
                FORM.RUN(FORM::"Sales Order",SalesHeader);
              "Document Type"::Invoice:
                FORM.RUN(FORM::"Sales Invoice",SalesHeader);
              "Document Type"::"Credit Memo":
                FORM.RUN(FORM::"Sales Credit Memo",SalesHeader);
              "Document Type"::"Blanket Order":
                FORM.RUN(FORM::"Blanket Sales Order",SalesHeader);
              "Document Type"::"Return Order":
                FORM.RUN(FORM::"Sales Return Order",SalesHeader);
            END;
          END;
        DATABASE::"Purchase Header":
          BEGIN
            IF NOT PurchHeader.GET("Document Type","Document No.") THEN
              EXIT;
            CASE "Document Type" OF
              "Document Type"::Quote:
                FORM.RUN(FORM::"Purchase Quote",PurchHeader);
              "Document Type"::Order:
                FORM.RUN(FORM::"Purchase Order",PurchHeader);
              "Document Type"::Invoice:
                FORM.RUN(FORM::"Purchase Invoice",PurchHeader);
              "Document Type"::"Credit Memo":
                FORM.RUN(FORM::"Purchase Credit Memo",PurchHeader);
              "Document Type"::"Blanket Order":
                FORM.RUN(FORM::"Blanket Purchase Order",PurchHeader);
              "Document Type"::"Return Order":
                FORM.RUN(FORM::"Purchase Return Order",PurchHeader);
            END;
          END;
        ELSE
          EXIT;
      END;
    END;

    BEGIN
    END.
  }
}

