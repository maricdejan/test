OBJECT Table 254 VAT Entry
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVDACH4.00.03;
  }
  PROPERTIES
  {
    CaptionML=[DEU=MwSt.-Posten;
               ENU=VAT Entry];
    LookupFormID=Form315;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.];
                                                   Editable=No }
    { 2   ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[DEU=Gesch„ftsbuchungsgruppe;
                                                              ENU=Gen. Bus. Posting Group];
                                                   Editable=No }
    { 3   ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[DEU=Produktbuchungsgruppe;
                                                              ENU=Gen. Prod. Posting Group];
                                                   Editable=No }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date];
                                                   Editable=No }
    { 5   ;   ;Document No.        ;Code20        ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.];
                                                   Editable=No }
    { 6   ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=" ,Zahlung,Rechnung,Gutschrift,Zinsrechnung,Mahnung,Erstattung";
                                                                    ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund];
                                                   Editable=No }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type = Type::Settlement THEN
                                                                  ERROR(Text000,FIELDCAPTION(Type),Type);
                                                              END;

                                                   CaptionML=[DEU=Art;
                                                              ENU=Type];
                                                   OptionCaptionML=[DEU=" ,Einkauf,Verkauf,Ausgleich";
                                                                    ENU=" ,Purchase,Sale,Settlement"];
                                                   OptionString=[ ,Purchase,Sale,Settlement];
                                                   Editable=No }
    { 8   ;   ;Base                ;Decimal       ;CaptionML=[DEU=Bemessungsgrundlage;
                                                              ENU=Base];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 9   ;   ;Amount              ;Decimal       ;CaptionML=[DEU=Betrag;
                                                              ENU=Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 10  ;   ;VAT Calculation Type;Option        ;CaptionML=[DEU=MwSt.-Berechnungsart;
                                                              ENU=VAT Calculation Type];
                                                   OptionCaptionML=[DEU=Normale MwSt.,Erwerbsbesteuerung,Nur MwSt.,Verkaufssteuer;
                                                                    ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 12  ;   ;Bill-to/Pay-to No.  ;Code20        ;TableRelation=IF (Type=CONST(Purchase)) Vendor
                                                                 ELSE IF (Type=CONST(Sale)) Customer;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                                IF "Bill-to/Pay-to No." = '' THEN BEGIN
                                                                  "Country/Region Code" := '';
                                                                  "VAT Registration No." := '';
                                                                END ELSE
                                                                  CASE Type OF
                                                                    Type::Purchase:
                                                                      BEGIN
                                                                        Vend.GET("Bill-to/Pay-to No.");
                                                                        "Country/Region Code" := Vend."Country/Region Code";
                                                                        "VAT Registration No." := Vend."VAT Registration No.";
                                                                      END;
                                                                    Type::Sale:
                                                                      BEGIN
                                                                        Cust.GET("Bill-to/Pay-to No.");
                                                                        "Country/Region Code" := Cust."Country/Region Code";
                                                                        "VAT Registration No." := Cust."VAT Registration No.";
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[DEU=Rech. an/Zahlung an Nr.;
                                                              ENU=Bill-to/Pay-to No.] }
    { 13  ;   ;EU 3-Party Trade    ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                              END;

                                                   CaptionML=[DEU=EU-Dreiecksgesch„ft;
                                                              ENU=EU 3-Party Trade] }
    { 14  ;   ;User ID             ;Code20        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Benutzer-ID;
                                                              ENU=User ID];
                                                   Editable=No }
    { 15  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[DEU=Herkunftscode;
                                                              ENU=Source Code];
                                                   Editable=No }
    { 16  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[DEU=Ursachencode;
                                                              ENU=Reason Code];
                                                   Editable=No }
    { 17  ;   ;Closed by Entry No. ;Integer       ;TableRelation="VAT Entry";
                                                   CaptionML=[DEU=Geschlossen von Lfd. Nr.;
                                                              ENU=Closed by Entry No.];
                                                   Editable=No }
    { 18  ;   ;Closed              ;Boolean       ;CaptionML=[DEU=Abgeschlossen;
                                                              ENU=Closed];
                                                   Editable=No }
    { 19  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                                VALIDATE("VAT Registration No.");
                                                              END;

                                                   CaptionML=[DEU=L„nder-/Regionscode;
                                                              ENU=Country/Region Code] }
    { 20  ;   ;Internal Ref. No.   ;Text30        ;CaptionML=[DEU=Interne Referenznr.;
                                                              ENU=Internal Ref. No.];
                                                   Editable=No }
    { 21  ;   ;Transaction No.     ;Integer       ;CaptionML=[DEU=Transaktionsnr.;
                                                              ENU=Transaction No.];
                                                   Editable=No }
    { 22  ;   ;Unrealized Amount   ;Decimal       ;CaptionML=[DEU=Unreal. Betrag;
                                                              ENU=Unrealized Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 23  ;   ;Unrealized Base     ;Decimal       ;CaptionML=[DEU=Unreal. Bemessungsgrundlage;
                                                              ENU=Unrealized Base];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 24  ;   ;Remaining Unrealized Amount;Decimal;CaptionML=[DEU=Unreal. Restbetrag;
                                                              ENU=Remaining Unrealized Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 25  ;   ;Remaining Unrealized Base;Decimal  ;CaptionML=[DEU=Unreal. Restbemessungsgr.;
                                                              ENU=Remaining Unrealized Base];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 26  ;   ;External Document No.;Code20       ;CaptionML=[DEU=Externe Belegnummer;
                                                              ENU=External Document No.];
                                                   Editable=No }
    { 28  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[DEU=Nummernserie;
                                                              ENU=No. Series];
                                                   Editable=No }
    { 29  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[DEU=Steuergebietscode;
                                                              ENU=Tax Area Code];
                                                   Editable=No }
    { 30  ;   ;Tax Liable          ;Boolean       ;CaptionML=[DEU=Steuerpflichtig;
                                                              ENU=Tax Liable];
                                                   Editable=No }
    { 31  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[DEU=Steuergruppencode;
                                                              ENU=Tax Group Code];
                                                   Editable=No }
    { 32  ;   ;Use Tax             ;Boolean       ;CaptionML=[DEU=Verbrauchssteuer;
                                                              ENU=Use Tax];
                                                   Editable=No }
    { 33  ;   ;Tax Jurisdiction Code;Code10       ;TableRelation="Tax Jurisdiction";
                                                   CaptionML=[DEU=Steuerzust„ndigkeitscode;
                                                              ENU=Tax Jurisdiction Code];
                                                   Editable=No }
    { 34  ;   ;Tax Group Used      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[DEU=Verwendete Steuergruppe;
                                                              ENU=Tax Group Used];
                                                   Editable=No }
    { 35  ;   ;Tax Type            ;Option        ;CaptionML=[DEU=Steuerart;
                                                              ENU=Tax Type];
                                                   OptionCaptionML=[DEU=Verkaufssteuer,Indirekte Steuer;
                                                                    ENU=Sales Tax,Excise Tax];
                                                   OptionString=Sales Tax,Excise Tax;
                                                   Editable=No }
    { 36  ;   ;Tax on Tax          ;Boolean       ;CaptionML=[DEU=Steuer auf Steuer;
                                                              ENU=Tax on Tax];
                                                   Editable=No }
    { 37  ;   ;Sales Tax Connection No.;Integer   ;CaptionML=[DEU=Verkaufssteuer-Verbindungsnr.;
                                                              ENU=Sales Tax Connection No.];
                                                   Editable=No }
    { 38  ;   ;Unrealized VAT Entry No.;Integer   ;TableRelation="VAT Entry";
                                                   CaptionML=[DEU=Unreal. MwSt.-Posten Lfd.Nr.;
                                                              ENU=Unrealized VAT Entry No.];
                                                   Editable=No }
    { 39  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[DEU=MwSt.-Gesch„ftsbuchungsgruppe;
                                                              ENU=VAT Bus. Posting Group];
                                                   Editable=No }
    { 40  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[DEU=MwSt.-Produktbuchungsgruppe;
                                                              ENU=VAT Prod. Posting Group];
                                                   Editable=No }
    { 43  ;   ;Additional-Currency Amount;Decimal ;CaptionML=[DEU=Betrag (BW);
                                                              ENU=Additional-Currency Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 44  ;   ;Additional-Currency Base;Decimal   ;CaptionML=[DEU=Bemessungsgrundlage (BW);
                                                              ENU=Additional-Currency Base];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 45  ;   ;Add.-Currency Unrealized Amt.;Decimal;
                                                   CaptionML=[DEU=Unreal. Betrag (BW);
                                                              ENU=Add.-Currency Unrealized Amt.];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 46  ;   ;Add.-Currency Unrealized Base;Decimal;
                                                   CaptionML=[DEU=Unreal. Bemessungsgrundl. (BW);
                                                              ENU=Add.-Currency Unrealized Base];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 48  ;   ;VAT Base Discount % ;Decimal       ;CaptionML=[DEU=MwSt.-Bemessungsgr. Skonto %;
                                                              ENU=VAT Base Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 49  ;   ;Add.-Curr. Rem. Unreal. Amount;Decimal;
                                                   CaptionML=[DEU=Unreal. Restbetrag (BW);
                                                              ENU=Add.-Curr. Rem. Unreal. Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 50  ;   ;Add.-Curr. Rem. Unreal. Base;Decimal;
                                                   CaptionML=[DEU=Unreal. Restbemessungsgr. (BW);
                                                              ENU=Add.-Curr. Rem. Unreal. Base];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 51  ;   ;VAT Difference      ;Decimal       ;CaptionML=[DEU=MwSt.-Differenz;
                                                              ENU=VAT Difference];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 52  ;   ;Add.-Curr. VAT Difference;Decimal  ;CaptionML=[DEU=MwSt.-Differenz (BW);
                                                              ENU=Add.-Curr. VAT Difference];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 53  ;   ;Ship-to/Order Address Code;Code10  ;TableRelation=IF (Type=CONST(Purchase)) "Order Address".Code WHERE (Vendor No.=FIELD(Bill-to/Pay-to No.))
                                                                 ELSE IF (Type=CONST(Sale)) "Ship-to Address".Code WHERE (Customer No.=FIELD(Bill-to/Pay-to No.));
                                                   CaptionML=[DEU=Verk. an/Eink. von Adresscode;
                                                              ENU=Ship-to/Order Address Code] }
    { 54  ;   ;Document Date       ;Date          ;CaptionML=[DEU=Belegdatum;
                                                              ENU=Document Date];
                                                   Editable=No }
    { 55  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record 381;
                                                              BEGIN
                                                                VATRegNoFormat.Test("VAT Registration No.","Country/Region Code",'',0);
                                                              END;

                                                   CaptionML=[DEU=USt-IdNr.;
                                                              ENU=VAT Registration No.] }
    { 56  ;   ;Reversed            ;Boolean       ;CaptionML=[DEU=Storniert;
                                                              ENU=Reversed] }
    { 57  ;   ;Reversed by Entry No.;Integer      ;TableRelation="VAT Entry";
                                                   CaptionML=[DEU=Storniert durch Lfd. Nr.;
                                                              ENU=Reversed by Entry No.];
                                                   BlankZero=Yes }
    { 58  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="VAT Entry";
                                                   CaptionML=[DEU=Stornierter Posten Lfd. Nr.;
                                                              ENU=Reversed Entry No.];
                                                   BlankZero=Yes }
    { 11000;  ;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[DEU=Sachkontonr.;
                                                              ENU=G/L Account No.] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Type,Closed,VAT Bus. Posting Group,VAT Prod. Posting Group,Posting Date,G/L Account No.;
                                                   SumIndexFields=Base,Amount,Additional-Currency Base,Additional-Currency Amount,Remaining Unrealized Amount,Remaining Unrealized Base,Add.-Curr. Rem. Unreal. Amount,Add.-Curr. Rem. Unreal. Base;
                                                   KeyGroups=VAT }
    {    ;Type,Closed,Tax Jurisdiction Code,Use Tax,Posting Date;
                                                   SumIndexFields=Base,Amount,Unrealized Amount,Unrealized Base,Remaining Unrealized Amount;
                                                   KeyGroups=SalesTax }
    {    ;Type,Country/Region Code,VAT Registration No.,VAT Bus. Posting Group,VAT Prod. Posting Group,Posting Date;
                                                   SumIndexFields=Base,Additional-Currency Base;
                                                   KeyGroups=VIES_EC }
    {    ;Document No.,Posting Date                }
    {    ;Transaction No.                          }
    {    ;Tax Jurisdiction Code,Tax Group Used,Tax Type,Use Tax,Posting Date;
                                                   KeyGroups=SalesTax }
    {    ;Type,Bill-to/Pay-to No.,Transaction No. ;KeyGroups=VATUnreal;
                                                   MaintainSQLIndex=No }
    {    ;Bill-to/Pay-to No.,EU 3-Party Trade,Type,Posting Date }
    {    ;Closed by Entry No.                      }
    {    ;Type,Closed,VAT Bus. Posting Group,VAT Prod. Posting Group,Tax Jurisdiction Code,Use Tax,Posting Date,G/L Account No.;
                                                   SumIndexFields=Base,Amount,Unrealized Amount,Unrealized Base,Additional-Currency Base,Additional-Currency Amount,Add.-Currency Unrealized Amt.,Add.-Currency Unrealized Base,Remaining Unrealized Amount;
                                                   KeyGroups=VAT }
    {    ;Country/Region Code,Posting Date         }
    {    ;Gen. Prod. Posting Group,Posting Date    }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Posting Date,Document Type,Document No.,Posting Date }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Sie k”nnen den Feldinhalt nicht l”schen, solange %1 %2 ist.;ENU=You cannot change the contents of this field when %1 is %2.';
      Cust@1001 : Record 18;
      Vend@1002 : Record 23;
      GLSetup@1003 : Record 98;
      GLSetupRead@1004 : Boolean;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
      EXIT(GLSetup."Additional Reporting Currency");
    END;

    PROCEDURE GetUnRealizedVATPart@2(SettledAmount@1003 : Decimal;Paid@1005 : Decimal;Full@1001 : Decimal;TotalUnrealVATAmountFirst@1006 : Decimal;TotalUnrealVATAmountLast@1007 : Decimal) : Decimal;
    VAR
      UnrealizedVatType@1000 : ' ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)';
    BEGIN
      IF (Type <> 0) AND
         (Amount = 0) AND
         (Base = 0)
      THEN BEGIN
        UnrealizedVatType := GetUnrealizedVatType;
        IF (UnrealizedVatType = UnrealizedVatType::" ") OR
           (("Remaining Unrealized Amount" = 0) AND
            ("Remaining Unrealized Base" = 0))
        THEN
          EXIT(0);

        IF ABS(Paid) = ABS(Full) THEN
          EXIT(1);

        CASE UnrealizedVatType OF
          UnrealizedVatType::Percentage:
            EXIT(ABS(SettledAmount) / (ABS(Full) - (ABS(Paid) - ABS(SettledAmount))));
          UnrealizedVatType::First:
            BEGIN
              IF "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" THEN
                EXIT(1);
              IF ABS(Paid) < ABS(TotalUnrealVATAmountFirst) THEN
                EXIT(ABS(SettledAmount) / ABS(TotalUnrealVATAmountFirst));
              EXIT(1);
            END;
          UnrealizedVatType::"First (Fully Paid)":
            BEGIN
              IF ("VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT") THEN
                EXIT(1);
              IF ABS(Paid) < ABS(TotalUnrealVATAmountFirst) THEN
                EXIT(0);
              EXIT(1);
            END;
          UnrealizedVatType::"Last (Fully Paid)":
            EXIT(0);
          UnrealizedVatType::Last:
            BEGIN
              IF "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" THEN
                EXIT(0);
              IF ABS(Paid) > ABS(Full) - ABS(TotalUnrealVATAmountLast) THEN
                EXIT((ABS(Paid) - (ABS(Full) - ABS(TotalUnrealVATAmountLast))) / ABS(TotalUnrealVATAmountLast));
              EXIT(0);
            END;
        END;
      END ELSE
        EXIT(0);
    END;

    PROCEDURE GetUnrealizedVatType@3() UnrealizedVatType : Integer;
    VAR
      VatPostingSetup@1001 : Record 325;
      TaxJurisdiction@1000 : Record 320;
    BEGIN
      IF "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" THEN BEGIN
        TaxJurisdiction.GET("Tax Jurisdiction Code");
        UnrealizedVatType := TaxJurisdiction."Unrealized VAT Type";
      END ELSE BEGIN
        VatPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
        UnrealizedVatType := VatPostingSetup."Unrealized VAT Type";
      END;
    END;

    BEGIN
    END.
  }
}

