OBJECT Report 593 Intrastat - Make Disk Tax Auth
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Intrastat - Diskette erstellen;
               ENU=Intrastat - Make Disk Tax Auth];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  RBMgt@1000 : Codeunit 419;
                BEGIN
                  IF ISSERVICETIER THEN
                    FileName := RBMgt.EnvironFileName('','');

                  IntrastatJnlLine4.COPYFILTERS("Intrastat Jnl. Line");
                  IF FileName = '' THEN
                    ERROR(Text000);
                  IntraFile.TEXTMODE := TRUE;
                  IntraFile.WRITEMODE := TRUE;
                  IF NOT ISSERVICETIER THEN IntraFile.QUERYREPLACE := TRUE;
                  IntraFile.CREATE(FileName);
                END;

    OnPostReport=VAR
                   ToFile@1001 : Text[1024];
                 BEGIN
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table262;
        DataItemTableView=SORTING(Journal Template Name,Name);
        OnPreDataItem=BEGIN
                        IntrastatJnlLine4.COPYFILTER("Journal Template Name","Journal Template Name");
                        IntrastatJnlLine4.COPYFILTER("Journal Batch Name",Name);
                      END;

        OnAfterGetRecord=BEGIN
                           TESTFIELD(Reported,FALSE);
                           IntraReferenceNo := "Statistics Period" + '000000';
                         END;

        ReqFilterFields=Journal Template Name,Name;
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table263;
        DataItemTableView=SORTING(Type,Country/Region Code,Tariff No.,Transaction Type,Transport Method);
        OnAfterGetRecord=BEGIN
                           IF ("Tariff No." = '') AND
                              ("Country/Region Code" = '') AND
                              ("Transaction Type" = '') AND
                              ("Transport Method" = '') AND
                              ("Total Weight" = 0)
                           THEN
                             CurrReport.SKIP;

                           TESTFIELD("Tariff No.");
                           TESTFIELD("Country/Region Code");
                           TESTFIELD("Transaction Type");
                           TESTFIELD("Total Weight");
                           IF "Supplementary Units" THEN
                             TESTFIELD(Quantity);
                           CompoundField :=
                             FORMAT("Country/Region Code",10) + FORMAT(DELCHR("Tariff No."),10) +
                             FORMAT("Transaction Type",10) + FORMAT("Transport Method",10);

                           IF (TempType <> Type) OR (STRLEN(TempCompoundField) = 0) THEN BEGIN
                             TempType := Type;
                             TempCompoundField := CompoundField;
                             IntraReferenceNo := COPYSTR(IntraReferenceNo,1,4) + FORMAT(Type,1,2) + '01001';
                           END ELSE
                             IF (TempCompoundField <> CompoundField) THEN BEGIN
                               TempCompoundField := CompoundField;
                               IF COPYSTR(IntraReferenceNo,8,3) = '999' THEN
                                 IntraReferenceNo := INCSTR(COPYSTR(IntraReferenceNo,1,7)) + '001'
                               ELSE
                                 IntraReferenceNo := INCSTR(IntraReferenceNo);
                             END;

                           "Internal Ref. No." := IntraReferenceNo;
                           MODIFY;
                         END;

        ReqFilterFields=Type;
        DataItemLink=Journal Template Name=FIELD(Journal Template Name),
                     Journal Batch Name=FIELD(Name);
      }
      SECTIONS
      {
      }
       }
    { PROPERTIES
      {
        DataItemIndent=1;
        DataItemTable=Table263;
        DataItemTableView=SORTING(Internal Ref. No.);
        DataItemVarName=IntrastatJnlLine2;
        OnPreDataItem=BEGIN
                        CompanyInfo.GET;
                        VATRegNo := CONVERTSTR(CompanyInfo."VAT Registration No.",Text001,'    ');
                        IntraFile.WRITE(FORMAT('00' + FORMAT(VATRegNo,8) + Text002,80));
                        IntraFile.WRITE(FORMAT('0100004',80));

                        SETRANGE("Internal Ref. No.",COPYSTR(IntraReferenceNo,1,4),COPYSTR(IntraReferenceNo,1,4)+'9');
                        CurrReport.CREATETOTALS(Quantity,"Statistical Value","Total Weight");

                        IntrastatJnlLine3.SETCURRENTKEY("Internal Ref. No.");
                      END;

        OnAfterGetRecord=BEGIN
                           IF ("Tariff No." = '') AND
                              ("Country/Region Code" = '') AND
                              ("Transaction Type" = '') AND
                              ("Transport Method" = '') AND
                              ("Total Weight" = 0)
                           THEN
                             CurrReport.SKIP;
                           "Tariff No." := DELCHR("Tariff No.");

                           TotalWeightAmt += "Total Weight";
                           QuantityAmt += Quantity;
                           StatisticalValueAmt += "Statistical Value";

                           IntrastatJnlLine5.COPY(IntrastatJnlLine2);
                           IF IntrastatJnlLine5.NEXT = 1 THEN BEGIN
                             IF (DELCHR(IntrastatJnlLine5."Tariff No.") = "Tariff No.") AND
                                (IntrastatJnlLine5."Country/Region Code" = "Country/Region Code") AND
                                (IntrastatJnlLine5."Transaction Type" = "Transaction Type") AND
                                (IntrastatJnlLine5."Transport Method" = "Transport Method")
                             THEN
                               GroupTotal := FALSE
                             ELSE
                               GroupTotal := TRUE;
                           END ELSE
                             GroupTotal := TRUE;

                           IF GroupTotal THEN BEGIN
                             WriteGrTotalsToFile(TotalWeightAmt,QuantityAmt,StatisticalValueAmt);
                             StatisticalValueTotalAmt += StatisticalValueAmt;
                             TotalWeightAmt := 0;
                             QuantityAmt := 0;
                             StatisticalValueAmt := 0;
                           END;
                         END;

        OnPostDataItem=VAR
                         ToFile@1000 : Text[1024];
                       BEGIN
                         IF NOT Receipt THEN
                           IntraFile.WRITE(
                             FORMAT(
                               '02000' + FORMAT(IntraReferenceNo,4) + '100000' +
                               FORMAT(VATRegNo,8) + '1' + FORMAT(IntraReferenceNo,4),
                               80));
                         IF NOT Shipment THEN
                           IntraFile.WRITE(
                             FORMAT(
                               '02000' + FORMAT(IntraReferenceNo,4) + '200000' +
                               FORMAT(VATRegNo,8) + '2' + FORMAT(IntraReferenceNo,4),
                               80));
                         IntraFile.WRITE(FORMAT('10' + DecimalNumeralZeroFormat(StatisticalValueTotalAmt,16),80));
                         IntraFile.CLOSE;

                         "Intrastat Jnl. Batch".Reported := TRUE;
                         "Intrastat Jnl. Batch".MODIFY;

                         IF ISSERVICETIER THEN BEGIN
                           ToFile := Text006;
                           DOWNLOAD(FileName,Text004,'',Text005,ToFile);
                         END;
                       END;

        GroupTotalFields=Internal Ref. No.;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=440;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF ISSERVICETIER THEN
                     RequestOptionsForm.FileName.VISIBLE := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;5500 ;440  ;Name=FileName;
                                                   CaptionML=[DEU=Dateiname;
                                                              ENU=File Name];
                                                   SourceExpr=FileName }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               FileNameVisible := TRUE;
             END;

      OnOpenPage=BEGIN
                   IF ISSERVICETIER THEN
                     FileNameVisible := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options] }

      { 1   ;2   ;Field     ;
                  Name=FileName;
                  CaptionML=[DEU=Dateiname;
                             ENU=File Name];
                  SourceExpr=FileName;
                  Visible=FileNameVisible }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Bitte Dateinamen eingeben.;ENU=Please enter the file name.';
      Text001@1001 : TextConst 'DEU=WwWw;ENU=WwWw';
      Text002@1002 : TextConst 'DEU=INTRASTAT;ENU=INTRASTAT';
      Text003@1003 : TextConst 'DEU=Es ist nicht m”glich, %1 in einem Feld mit der L„nge %2 anzuzeigen;ENU=It is not possible to display %1 in a field with a length of %2.';
      IntrastatJnlLine3@1004 : Record 263;
      IntrastatJnlLine4@1005 : Record 263;
      IntrastatJnlLine5@1026 : Record 263;
      CompanyInfo@1006 : Record 79;
      Country@1007 : Record 9;
      QuantityAmt@1023 : Decimal;
      StatisticalValueAmt@1024 : Decimal;
      StatisticalValueTotalAmt@1028 : Decimal;
      TotalWeightAmt@1025 : Decimal;
      IntraFile@1008 : File;
      FileName@1009 : Text[250];
      IntraReferenceNo@1010 : Text[10];
      CompoundField@1011 : Text[40];
      TempCompoundField@1012 : Text[40];
      TempType@1013 : Integer;
      NoOfEntries@1014 : Text[3];
      Receipt@1015 : Boolean;
      Shipment@1016 : Boolean;
      VATRegNo@1017 : Code[20];
      ImportExport@1018 : Code[1];
      OK@1019 : Boolean;
      Text004@1020 : TextConst 'DEU=Exportieren;ENU=Export';
      Text005@1021 : TextConst 'DEU=Alle Dateien (*.*)|*.*;ENU=All Files (*.*)|*.*';
      Text006@1022 : TextConst 'DEU=Standard.txt;ENU=Default.txt';
      GroupTotal@1027 : Boolean;
      FileNameVisible@19066691 : Boolean INDATASET;

    LOCAL PROCEDURE DecimalNumeralZeroFormat@1(DecimalNumeral@1000 : Decimal;Length@1001 : Integer) : Text[250];
    BEGIN
      EXIT(TextZeroFormat(DELCHR(FORMAT(ROUND(ABS(DecimalNumeral),1,'<'),0,1)),Length));
    END;

    LOCAL PROCEDURE TextZeroFormat@2(Text@1000 : Text[250];Length@1001 : Integer) : Text[250];
    BEGIN
      IF STRLEN(Text) > Length THEN
        ERROR(
          Text003,
          Text,Length);
      EXIT(PADSTR('',Length - STRLEN(Text),'0') + Text);
    END;

    PROCEDURE WriteGrTotalsToFile@3(TotalWeightAmt@1000 : Decimal;QuantityAmt@1001 : Decimal;StatisticalValueAmt@1002 : Decimal);
    BEGIN
      WITH IntrastatJnlLine2 DO BEGIN
        OK := COPYSTR("Internal Ref. No.",8,3) = '001';
        IF OK THEN BEGIN
          IntrastatJnlLine3.SETRANGE(
            "Internal Ref. No.",
            COPYSTR("Internal Ref. No.",1,7) + '000',
            COPYSTR("Internal Ref. No.",1,7) + '999');
          IntrastatJnlLine3.FIND('+');
          NoOfEntries := COPYSTR(IntrastatJnlLine3."Internal Ref. No.",8,3);
        END;
        ImportExport := INCSTR(FORMAT(Type,1,2));

        IF Type = Type::Receipt THEN
          Receipt := TRUE
        ELSE
          Shipment := TRUE;
        Country.GET("Country/Region Code");
        Country.TESTFIELD("Intrastat Code");

        IF OK THEN
          IntraFile.WRITE(
            FORMAT(
              '02' +
              TextZeroFormat(DELCHR(NoOfEntries),3) +
              FORMAT(COPYSTR(IntrastatJnlLine3."Internal Ref. No.",1,7) + '000',10) +
              FORMAT(VATRegNo,8) + FORMAT(ImportExport,1) + FORMAT(IntraReferenceNo,4),
              80));

        IntraFile.WRITE(
          FORMAT(
            '03' +
            TextZeroFormat(COPYSTR("Internal Ref. No.",8,3),3) +
            FORMAT("Internal Ref. No.",10) + FORMAT(Country."Intrastat Code",3) + FORMAT("Transaction Type",2) +
            '0' + FORMAT("Transport Method",1) + PADSTR("Tariff No.",9,'0') +
            DecimalNumeralZeroFormat(ROUND(TotalWeightAmt,1,'>'),15) +
            DecimalNumeralZeroFormat(QuantityAmt,10) +
            DecimalNumeralZeroFormat(StatisticalValueAmt,15),
            80));
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

