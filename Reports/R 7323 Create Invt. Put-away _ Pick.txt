OBJECT Report 7323 Create Invt. Put-away / Pick
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lagerbelege erstellen;
               ENU=Create Invt. Put-away / Pick];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   CreatePutAway := TRUE;
                   CreatePick := TRUE;
                 END;

    OnPreReport=BEGIN
                  IF NOT CreatePutAway AND NOT CreatePick THEN
                    ERROR(Text008)
                END;

    OnPostReport=BEGIN
                   TempWhseActivHdr.DELETEALL;
                 END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table5765;
        DataItemTableView=SORTING(Source Document,Source No.);
        OnPreDataItem=BEGIN
                        IF CreatePutAway AND NOT CreatePick THEN
                          SETRANGE(Type,Type::Inbound);
                        IF NOT CreatePutAway AND CreatePick THEN
                          SETRANGE(Type,Type::Outbound);

                        Window.OPEN(
                          Text001 +
                          Text002 +
                          Text003);

                        DocumentCreated := FALSE;

                        IF CreatePick THEN
                          CreateInvtPick.SetShowError(ShowError);
                      END;

        OnAfterGetRecord=BEGIN
                           Window.UPDATE(1,"Source Document");
                           Window.UPDATE(2,"Source No.");

                           CASE Type OF
                             Type::Inbound : TotalPutAwayCounter += 1;
                             Type::Outbound : TotalPickCounter += 1;
                           END;

                           IF CheckWhseRequest("Warehouse Request") THEN
                             CurrReport.SKIP;

                           IF ((Type = Type::Inbound) AND (WhseActivHeader.Type <> WhseActivHeader.Type::"Invt. Put-away")) OR
                              ((Type = Type::Outbound) AND (WhseActivHeader.Type <> WhseActivHeader.Type::"Invt. Pick")) OR
                              ("Source Type" <> WhseActivHeader."Source Type") OR
                              ("Source Subtype" <> WhseActivHeader."Source Subtype") OR
                              ("Source No." <> WhseActivHeader."Source No.") OR
                              ("Location Code" <> WhseActivHeader."Location Code")
                           THEN BEGIN
                             CASE Type OF
                               Type::Inbound:
                                 IF NOT CreateInvtPutAway.CheckSourceDoc("Warehouse Request") THEN
                                   CurrReport.SKIP;
                               Type::Outbound:
                                 IF NOT CreateInvtPick.CheckSourceDoc("Warehouse Request") THEN
                                   CurrReport.SKIP;
                             END;
                             InitWhseActivHeader;
                           END;

                           CASE Type OF
                             Type::Inbound:
                               BEGIN
                                 CreateInvtPutAway.SetWhseRequest("Warehouse Request",TRUE);
                                 CreateInvtPutAway.AutoCreatePutAway(WhseActivHeader);
                               END;
                             Type::Outbound:
                               BEGIN
                                 CreateInvtPick.SetWhseRequest("Warehouse Request",TRUE);
                                 CreateInvtPick.AutoCreatePick(WhseActivHeader);
                               END;
                           END;

                           IF NOT DocumentCreated THEN
                             DocumentCreated := WhseActivHeader."No." <> '';

                           IF WhseActivHeader."No." <> '' THEN BEGIN
                             CASE Type OF
                               Type::Inbound:
                                 PutAwayCounter := PutAwayCounter + 1;
                               Type::Outbound:
                                 PickCounter := PickCounter + 1;
                             END;
                             IF PrintDocument THEN
                               InsertTempWhseActivHdr;
                             COMMIT;
                           END;
                         END;

        OnPostDataItem=VAR
                         MessageText@1000 : Text[200];
                       BEGIN
                         IF TempWhseActivHdr.FIND('-') THEN
                           PrintNewDocuments;

                         Window.CLOSE;
                         IF DocumentCreated THEN
                           IF (PutAwayCounter > 0) AND (PickCounter > 0) THEN BEGIN
                             MessageText := Text005 + '\\' + Text006;
                             MESSAGE(MessageText,PutAwayCounter,TotalPutAwayCounter,PickCounter,TotalPickCounter);
                           END ELSE
                             IF PutAwayCounter > 0 THEN
                               MESSAGE(Text005,PutAwayCounter,TotalPutAwayCounter)
                             ELSE
                               MESSAGE(Text007,PickCounter,TotalPickCounter)
                         ELSE
                           MESSAGE(Text004);
                       END;

        ReqFilterFields=Source Document,Source No.;
      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=3850;
      Height=2200;
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1   ;CheckBox     ;3410 ;0    ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Lagereinlag. erst.;
                                                              ENU=Create Invt. Put-Away];
                                                   SourceExpr=CreatePutAway }
      { 2   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 3   ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Lagerkomm. erst.;
                                                              ENU=Create Invt. Pick];
                                                   SourceExpr=CreatePick }
      { 4   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=3 }
      { 5   ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=6 }
      { 6   ;CheckBox     ;3410 ;1100 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Beleg drucken;
                                                              ENU=Print Document];
                                                   SourceExpr=PrintDocument }
      { 7   ;CheckBox     ;3410 ;1760 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Fehler anzeigen;
                                                              ENU=Show Error];
                                                   SourceExpr=ShowError }
      { 8   ;Label        ;0    ;1760 ;3300 ;440  ;ParentControl=7 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Lagereinlag. erst.;
                             ENU=Create Invt. Put-Away];
                  SourceExpr=CreatePutAway }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Lagerkomm. erst.;
                             ENU=Create Invt. Pick];
                  SourceExpr=CreatePick }

      { 6   ;2   ;Field     ;
                  CaptionML=[DEU=Beleg drucken;
                             ENU=Print Document];
                  SourceExpr=PrintDocument }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Fehler anzeigen;
                             ENU=Show Error];
                  SourceExpr=ShowError }

    }
  }
  CODE
  {
    VAR
      WhseActivHeader@1002 : Record 5766;
      TempWhseActivHdr@1013 : TEMPORARY Record 5766;
      CreateInvtPutAway@1003 : Codeunit 7321;
      CreateInvtPick@1004 : Codeunit 7322;
      WhseActPrint@1012 : Codeunit 5776;
      CreatePutAway@1000 : Boolean;
      CreatePick@1001 : Boolean;
      Text001@1008 : TextConst 'DEU=Lagerbelege werden erstellt ...\\;ENU=Creating Inventory Warehouse Documents...\\';
      Text002@1007 : TextConst 'DEU=Herkunftsart    #1##########\;ENU=Source Type     #1##########\';
      Text003@1006 : TextConst 'DEU=Herkunftsnr.    #2##########;ENU=Source No.      #2##########';
      DocumentCreated@1010 : Boolean;
      PrintDocument@1011 : Boolean;
      PutAwayCounter@1014 : Integer;
      PickCounter@1015 : Integer;
      Window@1005 : Dialog;
      Text004@1009 : TextConst 'DEU=Es gibt nichts zu erstellen.;ENU=There is nothing to create.';
      Text005@1016 : TextConst 'DEU=Anzahl der erstellten EinlagerungsaktivitÑten: %1 von insgesamt  %2.;ENU=Number of put-away activities created: %1 out of total of  %2.';
      Text006@1017 : TextConst 'DEU=Anzahl der erstellten KommisionierungsaktivitÑten: %3 von insgesamt %4;ENU=Number of pick activities created: %3 out of total of %4';
      Text007@1018 : TextConst 'DEU=Anzahl der erstellten KommisionierungsaktivitÑten: %1 von insgesamt %2;ENU=Number of pick activities created: %1 out of total of %2';
      Text008@1019 : TextConst 'DEU=Sie mÅssen entweder die Option ''Lagerkomm. erst.'' oder ''Lagereinlagerung erstellen'' auswÑhlen.;ENU=You must check Create Put-away or Create Pick.';
      TotalPutAwayCounter@1020 : Integer;
      TotalPickCounter@1021 : Integer;
      ShowError@1022 : Boolean;
      SalesHeader@1023 : Record 36;

    LOCAL PROCEDURE InitWhseActivHeader@7();
    BEGIN
      WITH WhseActivHeader DO BEGIN
        INIT;
        CASE "Warehouse Request".Type OF
          "Warehouse Request".Type::Inbound:
            Type := Type::"Invt. Put-away";
          "Warehouse Request".Type::Outbound:
            Type := Type::"Invt. Pick";
        END;
        "No." := '';
        "Location Code" := "Warehouse Request"."Location Code";
      END;
    END;

    LOCAL PROCEDURE InsertTempWhseActivHdr@1();
    BEGIN
      TempWhseActivHdr.INIT;
      TempWhseActivHdr := WhseActivHeader;
      TempWhseActivHdr.INSERT;
    END;

    LOCAL PROCEDURE PrintNewDocuments@2();
    BEGIN
      WITH TempWhseActivHdr DO BEGIN
        REPEAT
          CASE Type OF
            Type::"Invt. Put-away":
              WhseActPrint.PrintInvtPutAwayHeader(TempWhseActivHdr,TRUE);
            Type::"Invt. Pick":
              WhseActPrint.PrintInvtPickHeader(TempWhseActivHdr,TRUE);
          END;
        UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE CheckWhseRequest@3(WhseRequest@1000 : Record 5765) : Boolean;
    BEGIN
      IF WhseRequest."Document Status" <> WhseRequest."Document Status"::Released THEN
        EXIT(TRUE);
      IF (WhseRequest.Type = WhseRequest.Type::Outbound) AND
         (WhseRequest."Shipping Advice" = WhseRequest."Shipping Advice"::Complete) AND
         (WhseRequest."Source Type" = DATABASE::"Sales Line") AND
         (WhseRequest."Source Subtype" = WhseRequest."Source Subtype"::"1")
        THEN BEGIN
          IF WhseRequest."Source No." <> SalesHeader."No." THEN
            SalesHeader.GET(SalesHeader."Document Type"::Order,WhseRequest."Source No.");
          EXIT(SalesHeader.CheckLocation(ShowError));
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

