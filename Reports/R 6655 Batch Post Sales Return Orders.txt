OBJECT Report 6655 Batch Post Sales Return Orders
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Verk.-Rekl. stapelbuchen;
               ENU=Batch Post Sales Return Orders];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table36;
        DataItemTableView=SORTING(Document Type,No.)
                          WHERE(Document Type=CONST(Return Order));
        ReqFilterHeadingML=[DEU=Verkaufsreklamation;
                            ENU=Sales Return Order];
        OnPreDataItem=BEGIN
                        IF ReplacePostingDate AND (PostingDateReq = 0D) THEN
                          ERROR(Text000);

                        ApprovalTemplate.SETCURRENTKEY(ApprovalTemplate."Table ID",ApprovalTemplate."Document Type",ApprovalTemplate.Enabled);
                        ApprovalTemplate.SETRANGE("Table ID",DATABASE::"Sales Header");
                        ApprovalTemplate.SETRANGE("Document Type","Sales Header"."Document Type"::"Return Order");
                        ApprovalTemplate.SETRANGE(Enabled,TRUE);
                        IF ApprovalTemplate.FINDFIRST THEN
                          "Sales Header".SETRANGE(Status,"Sales Header".Status::Released);

                        CounterTotal := COUNT;
                        Window.OPEN(Text001);
                      END;

        OnAfterGetRecord=BEGIN
                           IF CalcInvDisc THEN
                             CalculateInvoiceDiscount;

                           Counter := Counter + 1;
                           Window.UPDATE(1,"No.");
                           Window.UPDATE(2,ROUND(Counter / CounterTotal * 10000,1));
                           "Sales Header".Receive := ReceiveReq;
                           "Sales Header".Invoice := InvReq;
                           CLEAR(SalesPost);
                           SalesPost.SetPostingDate(ReplacePostingDate,ReplaceDocumentDate,PostingDateReq);
                           IF SalesPost.RUN("Sales Header") THEN BEGIN
                             CounterOK := CounterOK + 1;
                             IF MARKEDONLY THEN
                               MARK(FALSE);
                           END;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;
                         MESSAGE(Text002,CounterOK,CounterTotal);
                       END;

        ReqFilterFields=No.,Status;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5060;
      Height=3300;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                   ReplacePostingDate := FALSE;
                   ReplaceDocumentDate := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;1210 ;1650 ;440  ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date];
                                                   SourceExpr=PostingDateReq }
      { 21  ;Label        ;0    ;1210 ;3300 ;440  ;ParentControl=1 }
      { 2   ;CheckBox     ;3410 ;1760 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Buchungsdatum ersetzen;
                                                              ENU=Replace Posting Date];
                                                   SourceExpr=ReplacePostingDate;
                                                   OnValidate=BEGIN
                                                                IF ReplacePostingDate THEN
                                                                  MESSAGE(
                                                                    Text003 +
                                                                    Text004);
                                                              END;
                                                               }
      { 22  ;Label        ;0    ;1760 ;3300 ;440  ;ParentControl=2 }
      { 3   ;CheckBox     ;3410 ;2310 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Belegdatum ersetzen;
                                                              ENU=Replace Document Date];
                                                   SourceExpr=ReplaceDocumentDate }
      { 4   ;Label        ;0    ;2310 ;3300 ;440  ;ParentControl=3 }
      { 5   ;CheckBox     ;3410 ;2860 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Rechnungsrab. berechnen;
                                                              ENU=Calc. Inv. Discount];
                                                   SourceExpr=CalcInvDisc;
                                                   OnValidate=BEGIN
                                                                SalesSetup.GET;
                                                                SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                                                              END;
                                                               }
      { 6   ;Label        ;0    ;2860 ;3300 ;440  ;ParentControl=5 }
      { 7   ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Rechnung;
                                                              ENU=Invoice];
                                                   SourceExpr=InvReq }
      { 8   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=7 }
      { 9   ;CheckBox     ;3410 ;0    ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Lieferung;
                                                              ENU=Receive];
                                                   SourceExpr=ReceiveReq }
      { 10  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=9 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                   ReplacePostingDate := FALSE;
                   ReplaceDocumentDate := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options] }

      { 9   ;2   ;Field     ;
                  CaptionML=[DEU=Lieferung;
                             ENU=Receive];
                  SourceExpr=ReceiveReq }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Rechnung;
                             ENU=Invoice];
                  SourceExpr=InvReq }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date];
                  SourceExpr=PostingDateReq }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum ersetzen;
                             ENU=Replace Posting Date];
                  SourceExpr=ReplacePostingDate;
                  OnValidate=BEGIN
                               IF ReplacePostingDate THEN
                                 MESSAGE(
                                   Text003 +
                                   Text004);
                             END;
                              }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Belegdatum ersetzen;
                             ENU=Replace Document Date];
                  SourceExpr=ReplaceDocumentDate }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Rechnungsrab. berechnen;
                             ENU=Calc. Inv. Discount];
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                             END;
                              }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Bitte das Buchungsdatum eingeben.;ENU=Please enter the posting date.';
      Text001@1001 : TextConst 'DEU=Reklamationen werden gebucht   #1########## @2@@@@@@@@@@@@@;ENU=Posting return orders  #1########## @2@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'DEU=%1 Reklamationen von insgesamt %2 wurden gebucht.;ENU=%1 return orders out of a total of %2 have now been posted.';
      Text003@1003 : TextConst 'DEU=Der zu dem neuen Buchungsdatum geh”rige Wechselkurs auf dem Verkaufskopf \;ENU=The exchange rate associated with the new posting date on the sales header \';
      Text004@1004 : TextConst 'DEU=wird nicht auf die Verkaufszeilen angewendet.;ENU=will not apply to the sales lines.';
      SalesLine@1005 : Record 37;
      SalesSetup@1006 : Record 311;
      ApprovalTemplate@1019 : Record 464;
      SalesCalcDisc@1007 : Codeunit 60;
      SalesPost@1008 : Codeunit 80;
      Window@1009 : Dialog;
      PostingDateReq@1010 : Date;
      CounterTotal@1011 : Integer;
      Counter@1012 : Integer;
      CounterOK@1013 : Integer;
      ReceiveReq@1014 : Boolean;
      InvReq@1015 : Boolean;
      ReplacePostingDate@1016 : Boolean;
      ReplaceDocumentDate@1017 : Boolean;
      CalcInvDisc@1018 : Boolean;

    PROCEDURE CalculateInvoiceDiscount@1();
    BEGIN
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type","Sales Header"."Document Type");
      SalesLine.SETRANGE("Document No.","Sales Header"."No.");
      IF SalesLine.FIND('-') THEN
        IF SalesCalcDisc.RUN(SalesLine) THEN BEGIN
          "Sales Header".GET("Sales Header"."Document Type","Sales Header"."No.");
          COMMIT;
        END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

