OBJECT Report 296 Batch Post Sales Orders
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVDACH6.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Auftr„ge stapelbuchen;
               ENU=Batch Post Sales Orders];
    ProcessingOnly=Yes;
  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table36;
        DataItemTableView=SORTING(Document Type,No.)
                          WHERE(Document Type=CONST(Order));
        ReqFilterHeadingML=[DEU=Verkaufsauftrag;
                            ENU=Sales Order];
        OnPreDataItem=BEGIN
                        IF ReplacePostingDate AND (PostingDateReq = 0D) THEN
                          ERROR(Text000);

                        ApprovalTemplate.SETCURRENTKEY(ApprovalTemplate."Table ID",ApprovalTemplate."Document Type",ApprovalTemplate.Enabled);
                        ApprovalTemplate.SETRANGE("Table ID",DATABASE::"Sales Header");
                        ApprovalTemplate.SETRANGE("Document Type","Sales Header"."Document Type"::Order);
                        ApprovalTemplate.SETRANGE(Enabled,TRUE);
                        IF ApprovalTemplate.FINDFIRST THEN
                          "Sales Header".SETRANGE(Status,"Sales Header".Status::Released);

                        CounterTotal := COUNT;
                        Window.OPEN(Text001);
                      END;

        OnAfterGetRecord=BEGIN
                           IF CalcInvDisc THEN
                             CalculateInvoiceDiscount;

                           Counter := Counter + 1;
                           Window.UPDATE(1,"No.");
                           Window.UPDATE(2,ROUND(Counter / CounterTotal * 10000,1));
                           "Sales Header".Ship := ShipReq;
                           "Sales Header".Invoice := InvReq;
                           CLEAR(SalesPost);
                           SalesPost.SetPostingDate(ReplacePostingDate,ReplaceDocumentDate,PostingDateReq);
                           IF SalesPost.RUN("Sales Header") THEN BEGIN
                             CounterOK := CounterOK + 1;
                             IF MARKEDONLY THEN
                               MARK(FALSE);
                             IF Print THEN BEGIN
                               CASE "Document Type" OF
                                 "Document Type"::Order:
                                   BEGIN
                                     IF Ship THEN BEGIN
                                       SalesShipHeader."No." := "Last Shipping No.";
                                       SalesShipHeader.SETRECFILTER;
                                       PrintReport(ReportSelection.Usage::"S.Shipment");
                                     END;
                                     IF Invoice THEN BEGIN
                                       IF EBPPSetup.FIND('-') THEN
                                         IF EBPPSetup.CheckEBPPPrint("Document Type"::Invoice,"Last Posting No.","Bill-to Customer No.",TRUE) THEN
                                           EXIT;

                                       SalesInvHeader."No." := "Last Posting No.";
                                       SalesInvHeader.SETRECFILTER;
                                       PrintReport(ReportSelection.Usage::"S.Invoice");
                                     END;
                                   END;
                                 "Document Type"::Invoice:
                                   BEGIN
                                     IF EBPPSetup.FIND('-') THEN
                                       IF EBPPSetup.CheckEBPPPrint("Document Type"::Invoice,"Last Posting No.","Bill-to Customer No.",TRUE) THEN
                                         EXIT;

                                     IF "Last Posting No." = '' THEN
                                       SalesInvHeader."No." := "No."
                                     ELSE
                                       SalesInvHeader."No." := "Last Posting No.";
                                     SalesInvHeader.SETRECFILTER;
                                     PrintReport(ReportSelection.Usage::"S.Invoice");
                                   END;
                                 "Document Type"::"Credit Memo":
                                   BEGIN
                                     IF EBPPSetup.FIND('-') THEN
                                       IF EBPPSetup.CheckEBPPPrint("Document Type"::"Credit Memo","Last Posting No.","Bill-to Customer No.",TRUE) THEN
                                         EXIT;

                                     IF "Last Posting No." = '' THEN
                                       SalesCrMemoHeader."No." := "No."
                                     ELSE
                                       SalesCrMemoHeader."No." := "Last Posting No.";
                                     SalesCrMemoHeader.SETRECFILTER;
                                     PrintReport(ReportSelection.Usage::"S.Cr.Memo");
                                   END;
                               END;
                             END;

                           END;
                         END;

        OnPostDataItem=BEGIN
                         IF Print AND Invoice THEN
                           IF EBPPSetup.FIND('-') THEN
                             EBPPSetup.BatchSend;

                         Window.CLOSE;
                         MESSAGE(Text002,CounterOK,CounterTotal);
                       END;

        ReqFilterFields=No.,Status;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=5060;
      Height=4510;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                   ReplacePostingDate := FALSE;
                   ReplaceDocumentDate := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1   ;CheckBox     ;3410 ;0    ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Lieferung;
                                                              ENU=Ship];
                                                   SourceExpr=ShipReq }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 2   ;CheckBox     ;3410 ;550  ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Rechnung;
                                                              ENU=Invoice];
                                                   SourceExpr=InvReq }
      { 22  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=2 }
      { 3   ;TextBox      ;3410 ;1210 ;1650 ;440  ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date];
                                                   SourceExpr=PostingDateReq }
      { 23  ;Label        ;0    ;1210 ;3300 ;440  ;ParentControl=3 }
      { 4   ;CheckBox     ;3410 ;1760 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Buchungsdatum ersetzen;
                                                              ENU=Replace Posting Date];
                                                   SourceExpr=ReplacePostingDate;
                                                   OnValidate=BEGIN
                                                                IF ReplacePostingDate THEN
                                                                  MESSAGE(Text003);
                                                              END;
                                                               }
      { 24  ;Label        ;0    ;1760 ;3300 ;440  ;ParentControl=4 }
      { 5   ;CheckBox     ;3410 ;2310 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Belegdatum ersetzen;
                                                              ENU=Replace Document Date];
                                                   SourceExpr=ReplaceDocumentDate }
      { 6   ;Label        ;0    ;2310 ;3300 ;440  ;ParentControl=5 }
      { 7   ;CheckBox     ;3410 ;2860 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Rechnungsrab. berechnen;
                                                              ENU=Calc. Inv. Discount];
                                                   SourceExpr=CalcInvDisc;
                                                   OnValidate=BEGIN
                                                                SalesSetup.GET;
                                                                SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                                                              END;
                                                               }
      { 8   ;Label        ;0    ;2860 ;3300 ;440  ;ParentControl=7 }
      { 9   ;CheckBox     ;3410 ;3410 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Deb. von Lieferung benachrichtigen;
                                                              ENU=Notify Cust. of Shipment];
                                                   SourceExpr=SendShipNotif }
      { 10  ;Label        ;0    ;3410 ;3300 ;440  ;ParentControl=9 }
      { 1150000;CheckBox  ;3410 ;3960 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Drucken;
                                                              ENU=Print];
                                                   SourceExpr=Print }
      { 1150001;Label     ;0    ;3960 ;3300 ;440  ;ParentControl=1150000 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                   ReplacePostingDate := FALSE;
                   ReplaceDocumentDate := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Warenausgang;
                             ENU=Ship];
                  SourceExpr=ShipReq }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Rechnung;
                             ENU=Invoice];
                  SourceExpr=InvReq }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date];
                  SourceExpr=PostingDateReq }

      { 4   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum ersetzen;
                             ENU=Replace Posting Date];
                  SourceExpr=ReplacePostingDate;
                  OnValidate=BEGIN
                               IF ReplacePostingDate THEN
                                 MESSAGE(Text003);
                             END;
                              }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Belegdatum ersetzen;
                             ENU=Replace Document Date];
                  SourceExpr=ReplaceDocumentDate }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Rechnungsrab. berechnen;
                             ENU=Calc. Inv. Discount];
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                             END;
                              }

      { 9   ;2   ;Field     ;
                  CaptionML=[DEU=Deb. von Lieferung benachrichtigen;
                             ENU=Notify Cust. of Shipment];
                  SourceExpr=SendShipNotif }

      { 1150000;2;Field     ;
                  CaptionML=[DEU=Drucken;
                             ENU=Print];
                  SourceExpr=Print }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Bitte das Buchungsdatum eingeben.;ENU=Please enter the posting date.';
      Text001@1001 : TextConst 'DEU=Auftr„ge werden gebucht #1########## @2@@@@@@@@@@@@@;ENU=Posting orders  #1########## @2@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'DEU=%1 Auftr„ge von insgesamt %2 wurden gebucht.;ENU=%1 orders out of a total of %2 have now been posted.';
      Text003@1003 : TextConst 'DEU=Der zu dem neuen Buchungsdatum geh”rige Wechselkurs auf dem Verkaufskopf wird nicht auf die Verkaufszeilen angewendet.;ENU=The exchange rate associated with the new posting date on the sales header will not apply to the sales lines.';
      SalesLine@1005 : Record 37;
      SalesSetup@1006 : Record 311;
      ApprovalTemplate@1021 : Record 464;
      SalesCalcDisc@1007 : Codeunit 60;
      SalesPost@1008 : Codeunit 80;
      Window@1009 : Dialog;
      ShipReq@1010 : Boolean;
      InvReq@1011 : Boolean;
      PostingDateReq@1012 : Date;
      CounterTotal@1013 : Integer;
      Counter@1014 : Integer;
      CounterOK@1015 : Integer;
      ReplacePostingDate@1016 : Boolean;
      ReplaceDocumentDate@1017 : Boolean;
      CalcInvDisc@1018 : Boolean;
      SendShipNotif@1019 : Boolean;
      ReportSelection@1150004 : Record 77;
      SalesInvHeader@1150003 : Record 112;
      SalesCrMemoHeader@1150002 : Record 114;
      SalesShipHeader@1150001 : Record 110;
      Print@1150000 : Boolean;
      EBPPSetup@1150005 : Record 3010501;

    PROCEDURE CalculateInvoiceDiscount@1();
    BEGIN
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type","Sales Header"."Document Type");
      SalesLine.SETRANGE("Document No.","Sales Header"."No.");
      IF SalesLine.FIND('-') THEN
        IF SalesCalcDisc.RUN(SalesLine) THEN BEGIN
          "Sales Header".GET("Sales Header"."Document Type","Sales Header"."No.");
          COMMIT;
        END;
    END;

    PROCEDURE PrintReport@1150000(ReportUse@1150000 : Integer);
    BEGIN
      ReportSelection.RESET;
      ReportSelection.SETRANGE(Usage,ReportUse);
      ReportSelection.FIND('-');
      REPEAT
        ReportSelection.TESTFIELD("Report ID");
        CASE ReportUse OF
          ReportSelection.Usage::"S.Invoice":
            REPORT.RUNMODAL(ReportSelection."Report ID",FALSE,FALSE,SalesInvHeader);
          ReportSelection.Usage::"S.Cr.Memo":
            REPORT.RUNMODAL(ReportSelection."Report ID",FALSE,FALSE,SalesCrMemoHeader);
          ReportSelection.Usage::"S.Shipment":
            REPORT.RUNMODAL(ReportSelection."Report ID",FALSE,FALSE,SalesShipHeader);
        END;
      UNTIL ReportSelection.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

