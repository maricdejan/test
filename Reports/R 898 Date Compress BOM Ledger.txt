OBJECT Report 898 Date Compress BOM Ledger
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    Permissions=TableData 238=rimd,
                TableData 239=rimd,
                TableData 87=rimd;
    CaptionML=[DEU=Datumskompr. StÅckl.-posten;
               ENU=Date Compress BOM Ledger];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  BOMLedgEntryFilter := COPYSTR("BOM Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table238;
        DataItemTableView=SORTING(Posting Date);
        OnPreDataItem=BEGIN
                        IF NOT
                          CONFIRM(
                            Text000 +
                            Text001 +
                            Text002,FALSE)
                        THEN
                          CurrReport.BREAK;

                        IF EntrdDateComprReg."Ending Date" = 0D THEN
                          ERROR(STRSUBSTNO(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                        Window.OPEN(
                          Text004 +
                          Text005 +
                          Text006 +
                          Text007);

                        SourceCodeSetup.GET;
                        SourceCodeSetup.TESTFIELD("Compress BOM Ledger");

                        NewBOMLedgEntry.LOCKTABLE;
                        BOMReg.LOCKTABLE;
                        DateComprReg.LOCKTABLE;

                        IF BOMLedgEntry2.FIND('+') THEN;
                        LastEntryNo := BOMLedgEntry2."Entry No.";
                        SETRANGE("Entry No.",0,LastEntryNo);
                        SETRANGE("Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                        InitRegisters;
                      END;

        OnAfterGetRecord=BEGIN
                           BOMLedgEntry2 := "BOM Ledger Entry";
                           WITH BOMLedgEntry2 DO BEGIN
                             SETCURRENTKEY("Posting Date");
                             COPYFILTERS("BOM Ledger Entry");
                             SETFILTER("Posting Date",DateComprMgt.GetDateFilter("Posting Date",EntrdDateComprReg,TRUE));

                             LastEntryNo := LastEntryNo + 1;

                             NewBOMLedgEntry.INIT;
                             NewBOMLedgEntry."Entry No." := LastEntryNo;
                             NewBOMLedgEntry."Posting Date" := GETRANGEMIN("Posting Date");
                             Window.UPDATE(1,NewBOMLedgEntry."Posting Date");
                             DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
                             Window.UPDATE(2,DateComprReg."No. of New Records");

                             IF RetainNo(FIELDNO("Reference Type")) THEN BEGIN
                               SETRANGE("Reference Type","Reference Type");
                               NewBOMLedgEntry."Reference Type" := "Reference Type";
                             END;
                             IF RetainNo(FIELDNO("Entry Type")) THEN BEGIN
                               SETRANGE("Entry Type","Entry Type");
                               NewBOMLedgEntry."Entry Type" := "Entry Type";
                             END;
                             REPEAT
                               DELETE;
                               DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
                               Window.UPDATE(3,DateComprReg."No. Records Deleted");
                             UNTIL NOT FIND('-');
                             NewBOMLedgEntry.INSERT;
                           END;

                           IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                             NoOfDeleted := DateComprReg."No. Records Deleted";
                             InsertRegisters(BOMReg,DateComprReg);
                           END;
                         END;

        OnPostDataItem=BEGIN
                         IF DateComprReg."No. Records Deleted" > NoOfDeleted THEN
                           InsertRegisters(BOMReg,DateComprReg);
                       END;

        ReqFilterFields=Reference Type,Entry Type;
      }
      SECTIONS
      {
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=7260;
      Height=2750;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;

                   WITH "BOM Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Entry Type"),FIELDCAPTION("Entry Type"));
                     InsertField(FIELDNO("Reference Type"),FIELDCAPTION("Reference Type"));
                   END;
                 END;

    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;1650 ;440  ;CaptionML=[DEU=Startdatum;
                                                              ENU=Starting Date];
                                                   SourceExpr=EntrdDateComprReg."Starting Date" }
      { 21  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 2   ;TextBox      ;3410 ;550  ;1650 ;440  ;CaptionML=[DEU=Enddatum;
                                                              ENU=Ending Date];
                                                   SourceExpr=EntrdDateComprReg."Ending Date" }
      { 22  ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=2 }
      { 3   ;TextBox      ;3410 ;1100 ;2750 ;440  ;CaptionML=[DEU=PeriodenlÑnge;
                                                              ENU=Period Length];
                                                   OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Periode;
                                                                    ENU=Day,Week,Month,Quarter,Year,Period];
                                                   OptionString=Day,Week,Month,Quarter,Year,Period;
                                                   SourceExpr=EntrdDateComprReg."Period Length" }
      { 23  ;Label        ;0    ;1100 ;3300 ;440  ;ParentControl=3 }
      { 4   ;CheckBox     ;3410 ;1760 ;3850 ;440  ;CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type];
                                                   SourceExpr=Retain[1] }
      { 24  ;Label        ;0    ;1760 ;3300 ;440  ;ParentControl=4;
                                                   CaptionML=[DEU=Feldinhalt behalten;
                                                              ENU=Retain Field Contents] }
      { 5   ;CheckBox     ;3410 ;2310 ;3850 ;440  ;CaptionML=[DEU=Referenz;
                                                              ENU=Reference Type];
                                                   SourceExpr=Retain[2] }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF EntrdDateComprReg."Ending Date" = 0D THEN
                     EntrdDateComprReg."Ending Date" := TODAY;

                   WITH "BOM Ledger Entry" DO BEGIN
                     InsertField(FIELDNO("Entry Type"),FIELDCAPTION("Entry Type"));
                     InsertField(FIELDNO("Reference Type"),FIELDCAPTION("Reference Type"));
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Startdatum;
                             ENU=Starting Date];
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Enddatum;
                             ENU=Ending Date];
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=PeriodenlÑnge;
                             ENU=Period Length];
                  OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Periode;
                                   ENU=Day,Week,Month,Quarter,Year,Period];
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 1907651001;2;Group  ;
                  CaptionML=[DEU=Feldinhalt behalten;
                             ENU=Retain Field Contents] }

      { 4   ;3   ;Field     ;
                  CaptionML=[DEU=Postenart;
                             ENU=Entry Type];
                  SourceExpr=Retain[1] }

      { 5   ;3   ;Field     ;
                  CaptionML=[DEU=Referenz;
                             ENU=Reference Type];
                  SourceExpr=Retain[2] }

    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU="Diese Stapelverarbeitung lîscht Posten. ";ENU="This batch job deletes entries. "';
      Text001@1001 : TextConst 'DEU=Achtung: Es ist jetzt wichtig, eine Datensicherung dieser Datenbank zu erstellen, bevor Sie diese Stapelverarbeitung ausfÅhren.\\;ENU=Therefore, it is important that you make a backup of the database before you run the batch job.\\';
      Text002@1002 : TextConst 'DEU=Mîchten Sie die Buchungen datumskomprimieren?;ENU=Do you want to date compress the entries?';
      Text003@1003 : TextConst 'DEU=%1 muss angegeben werden.;ENU=%1 must be specified.';
      Text004@1004 : TextConst 'DEU=Datumskomprimierung StÅcklistenposten...\\;ENU=Date compressing BOM ledger entries...\\';
      Text005@1005 : TextConst 'DEU=Datum                #1######\\;ENU=Date                 #1######\\';
      Text006@1006 : TextConst 'DEU=Anz. neue Posten     #2######\;ENU=No. of new entries   #2######\';
      Text007@1007 : TextConst 'DEU=Anz. gelîsch. Posten #3######;ENU=No. of entries del.  #3######';
      SourceCodeSetup@1008 : Record 242;
      DateComprReg@1009 : Record 87;
      EntrdDateComprReg@1010 : Record 87;
      BOMReg@1011 : Record 239;
      NewBOMLedgEntry@1012 : Record 238;
      BOMLedgEntry2@1013 : Record 238;
      DateComprMgt@1014 : Codeunit 356;
      Window@1015 : Dialog;
      BOMLedgEntryFilter@1016 : Text[250];
      NoOfFields@1017 : Integer;
      Retain@1018 : ARRAY [10] OF Boolean;
      FieldNumber@1019 : ARRAY [10] OF Integer;
      FieldNameArray@1020 : ARRAY [10] OF Text[100];
      LastEntryNo@1021 : Integer;
      NoOfDeleted@1022 : Integer;
      BOMRegExists@1023 : Boolean;
      i@1024 : Integer;

    LOCAL PROCEDURE InitRegisters@4();
    BEGIN
      IF BOMReg.FIND('+') THEN;
      BOMReg.INIT;
      BOMReg."No." := BOMReg."No." + 1;
      BOMReg."Creation Date" := TODAY;
      BOMReg."Source Code" := SourceCodeSetup."Compress BOM Ledger";
      BOMReg."User ID" := USERID;
      BOMReg."From Entry No." := LastEntryNo + 1;

      IF DateComprReg.FIND('+') THEN;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"BOM Ledger Entry";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
      DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
      FOR i := 1 TO NoOfFields DO
        IF Retain[i] THEN
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
      DateComprReg.Filter := BOMLedgEntryFilter;
      DateComprReg."Register No." := BOMReg."No.";
      DateComprReg."Source Code" := SourceCodeSetup."Compress BOM Ledger";
      DateComprReg."User ID" := USERID;

      BOMRegExists := FALSE;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(VAR BOMReg@1000 : Record 239;VAR DateComprReg@1001 : Record 87);
    BEGIN
      BOMReg."To Entry No." := NewBOMLedgEntry."Entry No.";

      IF BOMRegExists THEN BEGIN
        BOMReg.MODIFY;
        DateComprReg.MODIFY;
      END ELSE BEGIN
        BOMReg.INSERT;
        DateComprReg.INSERT;
        BOMRegExists := TRUE;
      END;
      COMMIT;

      NewBOMLedgEntry.LOCKTABLE;
      BOMReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      BOMLedgEntry2.RESET;

      IF BOMLedgEntry2.FIND('+') THEN;
      IF LastEntryNo <> BOMLedgEntry2."Entry No." THEN BEGIN
        LastEntryNo := BOMLedgEntry2."Entry No.";
        InitRegisters;
      END;
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNumber[i] THEN
          EXIT(i);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

