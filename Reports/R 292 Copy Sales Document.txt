OBJECT Report 292 Copy Sales Document
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01,NAVDACH6.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Verkaufsbeleg kopieren;
               ENU=Copy Sales Document];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  SalesSetup.GET;
                  CopyDocMgt.SetProperties(
                    IncludeHeader,RecalculateLines,FALSE,FALSE,FALSE,SalesSetup."Exact Cost Reversing Mandatory",FALSE);
                  CopyDocMgt.SetArchDocVal(DocNoOccurrence,DocVersionNo);
                  CopyDocMgt.CopySalesDoc(DocType,DocNo,SalesHeader)
                END;

  }
  DATAITEMS
  {
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=8910;
      Height=4400;
      SaveValues=Yes;
      OnOpenForm=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Quote,DocNo) THEN;
                       DocType::"Blanket Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Blanket Order",DocNo) THEN;
                       DocType::Order:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Order,DocNo) THEN;
                       DocType::Invoice:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Invoice,DocNo) THEN;
                       DocType::"Return Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Return Order",DocNo) THEN;
                       DocType::"Credit Memo":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Credit Memo",DocNo) THEN;
                       DocType::"Posted Shipment":
                         IF FromSalesShptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                       DocType::"Posted Invoice":
                         IF FromSalesInvHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
                       DocType::"Posted Return Receipt":
                         IF FromReturnRcptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                       DocType::"Posted Credit Memo":
                         IF FromSalesCrMemoHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
                       DocType::"Arch. Order":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::Order,DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                       DocType::"Arch. Quote":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::Quote,DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                       DocType::"Arch. Blanket Order":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::"Blanket Order",DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                       DocType::"Arch. Return Order":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::"Return Order",DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                     END;
                     IF FromSalesHeader."No." = '' THEN
                       DocNo := '';
                   END;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 3   ;TextBox      ;3410 ;0    ;2750 ;440  ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type];
                                                   OptionCaptionML=[DEU=Angebot,Rahmenauftrag,Auftrag,Rechnung,Reklamation,Gutschrift,Geb. Lieferung,Geb. Rechnung,Geb. RÅcksendung,Geb. Gutschrift,Arch. Angebot,Arch. Auftrag,Arch. Rahmenauftrag,Arch. Reklamation;
                                                                    ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo,Arch. Quote,Arch. Order,Arch. Blanket Order,Arch. Return Order];
                                                   SourceExpr=DocType;
                                                   OnValidate=BEGIN
                                                                DocNo := '';
                                                                ValidateDocNo;
                                                              END;
                                                               }
      { 23  ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=3 }
      { 8   ;TextBox      ;3410 ;550  ;2750 ;440  ;CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.];
                                                   SourceExpr=DocNo;
                                                   OnValidate=BEGIN
                                                                ValidateDocNo;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupDocNo;
                                                            END;
                                                             }
      { 9   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=8 }
      { 1   ;CheckBox     ;3410 ;3410 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Inklusive Kopf;
                                                              ENU=Include Header];
                                                   SourceExpr=IncludeHeader;
                                                   OnValidate=BEGIN
                                                                ValidateIncludeHeader;
                                                              END;
                                                               }
      { 2   ;Label        ;0    ;3410 ;3300 ;440  ;ParentControl=1 }
      { 5   ;TextBox      ;3410 ;2200 ;2750 ;440  ;Editable=No;
                                                   HorzAlign=Left;
                                                   CaptionML=[DEU=Verk. an Deb.-Nr.;
                                                              ENU=Sell-to Customer No.];
                                                   SourceExpr=FromSalesHeader."Sell-to Customer No." }
      { 6   ;Label        ;0    ;2200 ;3300 ;440  ;ParentControl=5 }
      { 7   ;TextBox      ;3410 ;2750 ;5500 ;440  ;Editable=No;
                                                   CaptionML=[DEU=Verk. an Name;
                                                              ENU=Sell-to Customer Name];
                                                   SourceExpr=FromSalesHeader."Sell-to Customer Name" }
      { 10  ;Label        ;0    ;2750 ;3300 ;440  ;ParentControl=7 }
      { 4   ;CheckBox     ;3410 ;3960 ;440  ;440  ;ShowCaption=No;
                                                   CaptionML=[DEU=Zeilen neu berechnen;
                                                              ENU=Recalculate Lines];
                                                   SourceExpr=RecalculateLines;
                                                   OnValidate=BEGIN
                                                                IF (DocType = DocType::"Posted Shipment") OR (DocType = DocType::"Posted Return Receipt") THEN
                                                                  RecalculateLines := TRUE;
                                                              END;
                                                               }
      { 11  ;Label        ;0    ;3960 ;3300 ;440  ;ParentControl=4 }
      { 1140000;TextBox   ;3410 ;1100 ;2750 ;440  ;Editable=No;
                                                   CaptionML=[DEU=Belegnr. HÑufigkeit;
                                                              ENU=Doc. No. Occurrence];
                                                   BlankZero=Yes;
                                                   SourceExpr=DocNoOccurrence }
      { 1140001;Label     ;0    ;1100 ;3300 ;440  ;ParentControl=1140000 }
      { 1140002;TextBox   ;3410 ;1650 ;2750 ;440  ;Editable=No;
                                                   CaptionML=[DEU=Versionsnr.;
                                                              ENU=Version No.];
                                                   BlankZero=Yes;
                                                   SourceExpr=DocVersionNo }
      { 1140003;Label     ;0    ;1650 ;3300 ;440  ;ParentControl=1140002 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Quote,DocNo) THEN;
                       DocType::"Blanket Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Blanket Order",DocNo) THEN;
                       DocType::Order:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Order,DocNo) THEN;
                       DocType::Invoice:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Invoice,DocNo) THEN;
                       DocType::"Return Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Return Order",DocNo) THEN;
                       DocType::"Credit Memo":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Credit Memo",DocNo) THEN;
                       DocType::"Posted Shipment":
                         IF FromSalesShptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                       DocType::"Posted Invoice":
                         IF FromSalesInvHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
                       DocType::"Posted Return Receipt":
                         IF FromReturnRcptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                       DocType::"Posted Credit Memo":
                         IF FromSalesCrMemoHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
                       DocType::"Arch. Order":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::Order,DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                       DocType::"Arch. Quote":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::Quote,DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                       DocType::"Arch. Blanket Order":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::"Blanket Order",DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                       DocType::"Arch. Return Order":
                         IF FromArchSalesHeader.GET(FromArchSalesHeader."Document Type"::"Return Order",DocNo,DocNoOccurrence,DocVersionNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
                     END;
                     IF FromSalesHeader."No." = '' THEN
                       DocNo := '';
                   END;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options] }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Belegart;
                             ENU=Document Type];
                  OptionCaptionML=[DEU=Angebot,Rahmenauftrag,Auftrag,Rechnung,Reklamation,Gutschrift,Geb. Lieferung,Geb. Rechnung,Geb. RÅcksendung,Geb. Gutschrift,Arch. Angebot,Arch. Auftrag,Arch. Rahmenauftrag,Arch. Reklamation;
                                   ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo,Arch. Quote,Arch. Order,Arch. Blanket Order,Arch. Return Order];
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  CaptionML=[DEU=Belegnr.;
                             ENU=Document No.];
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 1140000;2;Field     ;
                  CaptionML=[DEU=Belegnr.-HÑufigkeit;
                             ENU=Doc. No. Occurrence];
                  BlankZero=Yes;
                  SourceExpr=DocNoOccurrence;
                  Editable=FALSE }

      { 1140002;2;Field     ;
                  CaptionML=[DEU=Versionsnr.;
                             ENU=Version No.];
                  BlankZero=Yes;
                  SourceExpr=DocVersionNo;
                  Editable=FALSE }

      { 5   ;2   ;Field     ;
                  CaptionML=[DEU=Verk. an Deb.-Nr.;
                             ENU=Sell-to Customer No.];
                  SourceExpr=FromSalesHeader."Sell-to Customer No.";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Verk. an Name;
                             ENU=Sell-to Customer Name];
                  SourceExpr=FromSalesHeader."Sell-to Customer Name";
                  Editable=FALSE }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Inklusive Kopf;
                             ENU=Include Header];
                  SourceExpr=IncludeHeader;
                  OnValidate=BEGIN
                               ValidateIncludeHeader;
                             END;
                              }

      { 4   ;2   ;Field     ;
                  CaptionML=[DEU=Zeilen neu berechnen;
                             ENU=Recalculate Lines];
                  SourceExpr=RecalculateLines;
                  OnValidate=BEGIN
                               IF (DocType = DocType::"Posted Shipment") OR (DocType = DocType::"Posted Return Receipt") THEN
                                 RecalculateLines := TRUE;
                             END;
                              }

    }
  }
  CODE
  {
    VAR
      SalesHeader@1007 : Record 36;
      FromSalesHeader@1010 : Record 36;
      FromSalesShptHeader@1012 : Record 110;
      FromSalesInvHeader@1014 : Record 112;
      FromReturnRcptHeader@1016 : Record 6660;
      FromSalesCrMemoHeader@1018 : Record 114;
      SalesSetup@1003 : Record 311;
      CopyDocMgt@1008 : Codeunit 6620;
      DocType@1026 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo,Arch. Quote,Arch. Order,Arch. Blanket Order,Arch. Return Order';
      DocNo@1027 : Code[20];
      IncludeHeader@1028 : Boolean;
      RecalculateLines@1029 : Boolean;
      Text000@1000 : TextConst 'DEU=Wenn Sie %1 kopieren, werden die Preisinformationen mîglicherweise nicht ordnungsgemÑ· storniert. Kopieren Sie stattdessen mîglichst %2, oder verwenden Sie die %3-FunktionalitÑt.;ENU=The price information may not be reversed correctly, if you copy a %1. If possible copy a %2 instead or use %3 functionality.';
      Text001@1001 : TextConst 'DEU=Warenausgang stornieren;ENU=Undo Shipment';
      Text002@1002 : TextConst 'DEU=RÅcksendung stornieren;ENU=Undo Return Receipt';
      Text003@1004 : TextConst 'DEU=Angebot,Rahmenauftrag,Auftrag,Rechnung,Reklamation,Gutschrift,Geb. Lieferung,Geb. Rechnung,Geb. RÅcksendung,Geb. Gutschrift;ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
      FromArchSalesHeader@1140000 : Record 5107;
      DocNoOccurrence@1140001 : Integer;
      DocVersionNo@1140002 : Integer;

    PROCEDURE SetSalesHeader@2(VAR NewSalesHeader@1000 : Record 36);
    BEGIN
      NewSalesHeader.TESTFIELD("No.");
      SalesHeader := NewSalesHeader;
    END;

    LOCAL PROCEDURE ValidateDocNo@10();
    VAR
      DocType2@1000 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
    BEGIN
      IF DocNo = '' THEN BEGIN
        FromSalesHeader.INIT;
        DocNoOccurrence := 0;
        DocVersionNo := 0;
      END ELSE
        IF FromSalesHeader."No." = '' THEN BEGIN
          FromSalesHeader.INIT;
          CASE DocType OF
            DocType::Quote,
            DocType::"Blanket Order",
            DocType::Order,
            DocType::Invoice,
            DocType::"Return Order",
            DocType::"Credit Memo":
              FromSalesHeader.GET(CopyDocMgt.SalesHeaderDocType(DocType),DocNo);
            DocType::"Posted Shipment":
              BEGIN
                FromSalesShptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                IF SalesHeader."Document Type" IN
                   [SalesHeader."Document Type"::"Return Order",SalesHeader."Document Type"::"Credit Memo"]
                THEN BEGIN
                  DocType2 := DocType2::"Posted Invoice";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text001);
                END;
              END;
            DocType::"Posted Invoice":
              BEGIN
                FromSalesInvHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
              END;
            DocType::"Posted Return Receipt":
              BEGIN
                FromReturnRcptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                IF SalesHeader."Document Type" IN
                   [SalesHeader."Document Type"::Order,SalesHeader."Document Type"::Invoice]
                THEN BEGIN
                  DocType2 := DocType2::"Posted Credit Memo";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text002);
                END;
              END;
            DocType::"Posted Credit Memo":
              BEGIN
                FromSalesCrMemoHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
              END;
            DocType::"Arch. Quote",DocType::"Arch. Order",DocType::"Arch. Blanket Order",DocType::"Arch. Return Order":
              BEGIN
                FromArchSalesHeader.GET(CopyDocMgt.ArchSalesHeaderDocType(DocType),DocNo,DocNoOccurrence,DocVersionNo);
                FromSalesHeader.TRANSFERFIELDS(FromArchSalesHeader);
              END;
          END;
        END;
      FromSalesHeader."No." := '';

      IncludeHeader :=
        (DocType IN [DocType::"Posted Invoice",DocType::"Posted Credit Memo"]) AND
        ((DocType = DocType::"Posted Credit Memo") <>
         (SalesHeader."Document Type" IN
          [SalesHeader."Document Type"::"Return Order",SalesHeader."Document Type"::"Credit Memo"])) AND
        (SalesHeader."Bill-to Customer No." IN [FromSalesHeader."Bill-to Customer No.",'']);
      ValidateIncludeHeader;
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        PageLookupDocNo;
        EXIT;
      END;
      CASE DocType OF
        DocType::Quote,
        DocType::"Blanket Order",
        DocType::Order,
        DocType::Invoice,
        DocType::"Return Order",
        DocType::"Credit Memo":
          BEGIN
            FromSalesHeader.FILTERGROUP := 0;
            FromSalesHeader.SETRANGE("Document Type",CopyDocMgt.SalesHeaderDocType(DocType));
            IF SalesHeader."Document Type" = CopyDocMgt.SalesHeaderDocType(DocType) THEN
              FromSalesHeader.SETFILTER("No.",'<>%1',SalesHeader."No.");
            FromSalesHeader.FILTERGROUP := 2;
            FromSalesHeader."Document Type" := CopyDocMgt.SalesHeaderDocType(DocType);
            FromSalesHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.") THEN BEGIN
                FromSalesHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesHeader."No.";
          END;
        DocType::"Posted Shipment":
          BEGIN
            FromSalesShptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesShptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesShptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesShptHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesShptHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesShptHeader."No.";
          END;
        DocType::"Posted Invoice":
          BEGIN
            FromSalesInvHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesInvHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesInvHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesInvHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesInvHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesInvHeader."No.";
          END;
        DocType::"Posted Return Receipt":
          BEGIN
            FromReturnRcptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromReturnRcptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromReturnRcptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromReturnRcptHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromReturnRcptHeader) = ACTION::LookupOK THEN
              DocNo := FromReturnRcptHeader."No.";
          END;
        DocType::"Posted Credit Memo":
          BEGIN
            FromSalesCrMemoHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesCrMemoHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesCrMemoHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesCrMemoHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesCrMemoHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesCrMemoHeader."No.";
          END;
        DocType::"Arch. Quote",DocType::"Arch. Order",DocType::"Arch. Blanket Order",DocType::"Arch. Return Order":
          BEGIN
            FromArchSalesHeader.FILTERGROUP := 0;
            FromArchSalesHeader.SETRANGE("Document Type", CopyDocMgt.ArchSalesHeaderDocType(DocType));
            FromArchSalesHeader.FILTERGROUP := 2;
            FromArchSalesHeader."Document Type" := CopyDocMgt.ArchSalesHeaderDocType(DocType);
            FromArchSalesHeader."No." := DocNo;
            FromArchSalesHeader."Doc. No. Occurrence" := DocNoOccurrence;
            FromArchSalesHeader."Version No." := DocVersionNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromArchSalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.") THEN BEGIN
                FromArchSalesHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromArchSalesHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromArchSalesHeader) = ACTION::LookupOK THEN
              BEGIN
                DocNo := FromArchSalesHeader."No.";
                DocNoOccurrence := FromArchSalesHeader."Doc. No. Occurrence";
                DocVersionNo := FromArchSalesHeader."Version No.";
                RequestOptionsForm.UPDATE(FALSE);
              END;
          END;
      END;
      ValidateDocNo;
    END;

    LOCAL PROCEDURE ValidateIncludeHeader@4();
    BEGIN
      RecalculateLines :=
        (DocType IN [DocType::"Posted Shipment",DocType::"Posted Return Receipt"]) OR NOT IncludeHeader;
    END;

    PROCEDURE InitializeRequest@1(NewDocType@1001 : Option;NewDocNo@1000 : Code[20];NewIncludeHeader@1002 : Boolean;NewRecalcLines@1003 : Boolean);
    BEGIN
      DocType := NewDocType;
      DocNo := NewDocNo;
      IncludeHeader := NewIncludeHeader;
      RecalculateLines := NewRecalcLines;
    END;

    LOCAL PROCEDURE PageLookupDocNo@19053290();
    BEGIN
      CASE DocType OF
        DocType::Quote,
        DocType::"Blanket Order",
        DocType::Order,
        DocType::Invoice,
        DocType::"Return Order",
        DocType::"Credit Memo":
          BEGIN
            FromSalesHeader.FILTERGROUP := 0;
            FromSalesHeader.SETRANGE("Document Type",CopyDocMgt.SalesHeaderDocType(DocType));
            IF SalesHeader."Document Type" = CopyDocMgt.SalesHeaderDocType(DocType) THEN
              FromSalesHeader.SETFILTER("No.",'<>%1',SalesHeader."No.");
            FromSalesHeader.FILTERGROUP := 2;
            FromSalesHeader."Document Type" := CopyDocMgt.SalesHeaderDocType(DocType);
            FromSalesHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.") THEN BEGIN
                FromSalesHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesHeader."No.";
          END;
        DocType::"Posted Shipment":
          BEGIN
            FromSalesShptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesShptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesShptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesShptHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesShptHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesShptHeader."No.";
          END;
        DocType::"Posted Invoice":
          BEGIN
            FromSalesInvHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesInvHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesInvHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesInvHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesInvHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesInvHeader."No.";
          END;
        DocType::"Posted Return Receipt":
          BEGIN
            FromReturnRcptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromReturnRcptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromReturnRcptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromReturnRcptHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromReturnRcptHeader) = ACTION::LookupOK THEN
              DocNo := FromReturnRcptHeader."No.";
          END;
        DocType::"Posted Credit Memo":
          BEGIN
            FromSalesCrMemoHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesCrMemoHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesCrMemoHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesCrMemoHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromSalesCrMemoHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesCrMemoHeader."No.";
          END;
        DocType::"Arch. Quote",DocType::"Arch. Order",DocType::"Arch. Blanket Order",DocType::"Arch. Return Order":
          BEGIN
            FromArchSalesHeader.FILTERGROUP := 0;
            FromArchSalesHeader.SETRANGE("Document Type", CopyDocMgt.ArchSalesHeaderDocType(DocType));
            FromArchSalesHeader.FILTERGROUP := 2;
            FromArchSalesHeader."Document Type" := CopyDocMgt.ArchSalesHeaderDocType(DocType);
            FromArchSalesHeader."No." := DocNo;
            FromArchSalesHeader."Doc. No. Occurrence" := DocNoOccurrence;
            FromArchSalesHeader."Version No." := DocVersionNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromArchSalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.") THEN BEGIN
                FromArchSalesHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromArchSalesHeader.FIND('=><') THEN;
              END;
            IF FORM.RUNMODAL(0,FromArchSalesHeader) = ACTION::LookupOK THEN
              BEGIN
                DocNo := FromArchSalesHeader."No.";
                DocNoOccurrence := FromArchSalesHeader."Doc. No. Occurrence";
                DocVersionNo := FromArchSalesHeader."Version No.";
                RequestOptionsPage.UPDATE(FALSE);
              END;
          END;
      END;
      ValidateDocNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

