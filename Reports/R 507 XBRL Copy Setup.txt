OBJECT Report 507 XBRL Copy Setup
{
  OBJECT-PROPERTIES
  {
    Date=05.11.08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=XBRL Einrichtung kopieren;
               ENU=XBRL Copy Setup];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF FromTaxonomyName = '' THEN
                    ERROR(Text002);
                  IF ToTaxonomyName = '' THEN
                    ERROR(Text003);
                  IF FromTaxonomyName = ToTaxonomyName THEN
                    ERROR(Text004);
                END;

  }
  DATAITEMS
  {
    { PROPERTIES
      {
        DataItemTable=Table395;
        DataItemTableView=SORTING(XBRL Taxonomy Name,Line No.);
        DataItemVarName=FromXBRLLine;
        OnPreDataItem=BEGIN
                        FromXBRLLine.SETRANGE("XBRL Taxonomy Name",FromTaxonomyName);
                        ToXBRLLine.SETCURRENTKEY(Name);
                        ToXBRLLine.SETRANGE("XBRL Taxonomy Name",ToTaxonomyName);
                        NoOfRecords := FromXBRLLine.COUNT;
                        Window.OPEN(Text001);
                        T0 := TIME;
                        T1 := T0;
                      END;

        OnAfterGetRecord=BEGIN
                           Progress := Progress + 1;
                           T1 := TIME;
                           IF T1 > T0 + 250 THEN BEGIN
                             Window.UPDATE(1,ROUND(Progress * 10000 / NoOfRecords,1));
                             T0 := TIME;
                             T1 := T0;
                           END;

                           ToXBRLLine.SETRANGE(Name,FromXBRLLine.Name);
                           IF ToXBRLLine.FIND('-') THEN BEGIN
                             ToXBRLLine.Description := FromXBRLLine.Description;
                             ToXBRLLine."Constant Amount" := FromXBRLLine."Constant Amount";
                             ToXBRLLine."Source Type" := FromXBRLLine."Source Type";
                             ToXBRLLine.MODIFY;

                             FromXBRLCommentLine.SETRANGE("XBRL Taxonomy Name",FromXBRLLine."XBRL Taxonomy Name");
                             FromXBRLCommentLine.SETRANGE("XBRL Taxonomy Line No.",FromXBRLLine."Line No.");
                             FromXBRLCommentLine.SETRANGE("Comment Type",FromXBRLCommentLine."Comment Type"::Notes);
                             IF FromXBRLCommentLine.FIND('-') THEN
                               REPEAT
                                 ToXBRLCommentLine := FromXBRLCommentLine;
                                 ToXBRLCommentLine."XBRL Taxonomy Name" := ToXBRLLine."XBRL Taxonomy Name";
                                 ToXBRLCommentLine."XBRL Taxonomy Line No." := ToXBRLLine."Line No.";
                                 IF ToXBRLCommentLine.INSERT THEN;
                               UNTIL FromXBRLCommentLine.NEXT = 0;

                             FromXBRLGLMapLine.SETRANGE("XBRL Taxonomy Name",FromXBRLLine."XBRL Taxonomy Name");
                             FromXBRLGLMapLine.SETRANGE("XBRL Taxonomy Line No.",FromXBRLLine."Line No.");
                             IF FromXBRLGLMapLine.FIND('-') THEN
                               REPEAT
                                 ToXBRLGLMapLine := FromXBRLGLMapLine;
                                 ToXBRLGLMapLine."XBRL Taxonomy Name" := ToXBRLLine."XBRL Taxonomy Name";
                                 ToXBRLGLMapLine."XBRL Taxonomy Line No." := ToXBRLLine."Line No.";
                                 IF ToXBRLGLMapLine.INSERT THEN;
                               UNTIL FromXBRLGLMapLine.NEXT = 0;
                           END ELSE
                             CurrReport.SKIP;
                         END;

        OnPostDataItem=BEGIN
                         Window.CLOSE;
                       END;

      }
      SECTIONS
      {
        { PROPERTIES
          {
            SectionType=Body;
            SectionWidth=12000;
            SectionHeight=846;
          }
          CONTROLS
          {
          }
           }
      }
       }
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=6160;
      Height=990;
    }
    CONTROLS
    {
      { 1   ;TextBox      ;3410 ;0    ;2750 ;440  ;CaptionML=[DEU=Von Taxonomiename;
                                                              ENU=From Taxonomy Name];
                                                   SourceExpr=FromTaxonomyName;
                                                   OnValidate=BEGIN
                                                                ValidateTaxonomy(FromTaxonomyName);
                                                              END;

                                                   OnLookup=BEGIN
                                                              EXIT(LookupTaxonomy(Text));
                                                            END;
                                                             }
      { 2   ;Label        ;0    ;0    ;3300 ;440  ;ParentControl=1 }
      { 3   ;TextBox      ;3410 ;550  ;2750 ;440  ;CaptionML=[DEU=In Taxonomiename;
                                                              ENU=To Taxonomy Name];
                                                   SourceExpr=ToTaxonomyName;
                                                   OnValidate=BEGIN
                                                                ValidateTaxonomy(ToTaxonomyName);
                                                              END;

                                                   OnLookup=BEGIN
                                                              EXIT(LookupTaxonomy(Text));
                                                            END;
                                                             }
      { 4   ;Label        ;0    ;550  ;3300 ;440  ;ParentControl=3 }
    }
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options] }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Von Taxonomiename;
                             ENU=From Taxonomy Name];
                  SourceExpr=FromTaxonomyName;
                  OnValidate=BEGIN
                               ValidateTaxonomy(FromTaxonomyName);
                             END;

                  OnLookup=BEGIN
                             EXIT(LookupTaxonomy(Text));
                           END;
                            }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=In Taxonomiename;
                             ENU=To Taxonomy Name];
                  SourceExpr=ToTaxonomyName;
                  OnValidate=BEGIN
                               ValidateTaxonomy(ToTaxonomyName);
                             END;

                  OnLookup=BEGIN
                             EXIT(LookupTaxonomy(Text));
                           END;
                            }

    }
  }
  CODE
  {
    VAR
      ToXBRLLine@1000 : Record 395;
      FromXBRLCommentLine@1001 : Record 396;
      ToXBRLCommentLine@1002 : Record 396;
      FromXBRLGLMapLine@1003 : Record 397;
      ToXBRLGLMapLine@1004 : Record 397;
      FromTaxonomyName@1005 : Code[20];
      ToTaxonomyName@1006 : Code[20];
      NoOfRecords@1007 : Integer;
      Progress@1008 : Integer;
      Window@1009 : Dialog;
      Text001@1010 : TextConst 'DEU=Einrichtung wird kopiert @1@@@@@@@@;ENU=Copying Setup @1@@@@@@@@';
      T0@1011 : Time;
      T1@1012 : Time;
      Text002@1013 : TextConst 'DEU=Sie mÅssen den Taxonomienamen angeben, von dem kopiert werden soll.;ENU=You must enter a From Taxonomy Name.';
      Text003@1014 : TextConst 'DEU=Sie mÅssen den Taxonomienamen angeben, in den kopiert werden soll.;ENU=You must enter a To Taxonomy Name.';
      Text004@1015 : TextConst 'DEU=Die Angaben in den Feldern Von Taxonomiename und In Taxonomiename mÅssen unterschiedlich sein.;ENU=To and From Taxonomy Names must be different.';

    LOCAL PROCEDURE LookupTaxonomy@5(VAR Text@1000 : Text[1024]) : Boolean;
    VAR
      XBRLTaxonomy@1001 : Record 394;
      XBRLTaxonomies@1002 : Form 582;
    BEGIN
      XBRLTaxonomy.Name := COPYSTR(Text,1,MAXSTRLEN(XBRLTaxonomy.Name));
      IF XBRLTaxonomy.FIND('=<>') THEN;
      XBRLTaxonomies.SETRECORD(XBRLTaxonomy);
      XBRLTaxonomies.LOOKUPMODE := TRUE;
      IF XBRLTaxonomies.RUNMODAL = ACTION::LookupOK THEN BEGIN
        XBRLTaxonomies.GETRECORD(XBRLTaxonomy);
        Text := XBRLTaxonomy.Name;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE ValidateTaxonomy@6(TaxonomyName@1000 : Code[20]);
    VAR
      XBRLTaxonomy@1001 : Record 394;
    BEGIN
      XBRLTaxonomy.GET(TaxonomyName);
    END;

    PROCEDURE SetCopyTo@1(NewToTaxonomyName@1000 : Code[20]);
    BEGIN
      ToTaxonomyName := NewToTaxonomyName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

