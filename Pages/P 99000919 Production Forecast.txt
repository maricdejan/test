OBJECT Page 99000919 Production Forecast
{
  OBJECT-PROPERTIES
  {
    Date=14.08.09;
    Time=12:00:00;
    Version List=NAVW16.00.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Absatzplanung;
               ENU=Production Forecast];
    InsertAllowed=No;
    DeleteAllowed=No;
    DataCaptionExpr=ProductionForecastName;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 IF (NewProductionForecastName <> '') AND (NewProductionForecastName <> ProductionForecastName) THEN
                   ProductionForecastName := NewProductionForecastName;
                 SetColumns(SetWanted::First);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions] }
      { 8       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Absatzplanung kopieren;
                                 ENU=Copy Production Forecast];
                      RunObject=Report 99003803 }
      { 25      ;1   ;Action    ;
                      CaptionML=[DEU=Vorheriger Satz;
                                 ENU=Previous Set];
                      ToolTipML=ENU=Previous Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Previous);
                               END;
                                }
      { 24      ;1   ;Action    ;
                      CaptionML=[DEU=Vorherige Spalte;
                                 ENU=Previous Column];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::PreviousColumn);
                               END;
                                }
      { 23      ;1   ;Action    ;
                      CaptionML=[DEU=N„chste Spalte;
                                 ENU=Next Column];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::NextColumn);
                               END;
                                }
      { 22      ;1   ;Action    ;
                      CaptionML=[DEU=N„chster Satz;
                                 ENU=Next Set];
                      ToolTipML=ENU=Next Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[DEU=Allgemein;
                           ENU=General] }

    { 15  ;2   ;Field     ;
                CaptionML=[DEU=Absatzplanungsname;
                           ENU=Production Forecast Name];
                SourceExpr=ProductionForecastName;
                TableRelation="Production Forecast Name".Name;
                OnValidate=BEGIN
                             SetMatrix;
                           END;
                            }

    { 29  ;2   ;Field     ;
                CaptionML=[DEU=Lagerortfilter;
                           ENU=Location Filter];
                SourceExpr=LocationFilter;
                OnValidate=BEGIN
                             SetMatrix;
                           END;

                OnLookup=VAR
                           LocList@1000 : Form 15;
                           Loc@1001 : Record 14;
                         BEGIN
                           LocList.LOOKUPMODE(TRUE);
                           Loc.SETRANGE("Use As In-Transit", FALSE);
                           LocList.SETTABLEVIEW(Loc);
                           IF NOT (LocList.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE)
                           ELSE
                             Text := LocList.GetSelectionFilter;

                           EXIT(TRUE);
                         END;
                          }

    { 18  ;2   ;Field     ;
                CaptionML=[DEU=Anzeigen nach;
                           ENU=View by];
                OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr,Buchhaltungsperiode;
                                 ENU=Day,Week,Month,Quarter,Year,Accounting Period];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             SetColumns(SetWanted::First);
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[DEU=Anzeigen als;
                           ENU=View as];
                OptionCaptionML=[DEU=Bewegung,Saldo bis Datum;
                                 ENU=Net Change,Balance at Date];
                SourceExpr=QtyType;
                OnValidate=BEGIN
                             QtyTypeOnAfterValidate;
                           END;
                            }

    { 13  ;2   ;Field     ;
                CaptionML=[DEU=Planungsart;
                           ENU=Forecast Type];
                OptionCaptionML=[DEU=Verkaufsartikel,Komponente,Beides;
                                 ENU=Sales Item,Component,Both];
                SourceExpr=ForecastType;
                OnValidate=BEGIN
                             ForecastTypeOnAfterValidate;
                           END;
                            }

    { 21  ;2   ;Field     ;
                CaptionML=[DEU=Datumsfilter;
                           ENU=Date Filter];
                SourceExpr=DateFilter;
                OnValidate=VAR
                             ApplicationManagement@1001 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                             SetColumns(SetWanted::First);
                           END;
                            }

    { 1102601000;1;Part   ;
                Name=Matrix;
                PagePartID=Page9245 }

  }
  CODE
  {
    VAR
      MatrixRecords@1014 : ARRAY [32] OF Record 2000000007;
      PeriodType@1005 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      QtyType@1016 : 'Net Change,Balance at Date';
      ForecastType@1007 : 'Sales Item,Component,Both';
      ProductionForecastName@1018 : Text[30];
      NewProductionForecastName@1010 : Text[30];
      LocationFilter@1017 : Text[30];
      DateFilter@1008 : Text[30];
      MatrixColumnCaptions@1012 : ARRAY [32] OF Text[1024];
      ColumnSet@1011 : Text[1024];
      SetWanted@1009 : 'First,Previous,Same,Next,PreviousColumn,NextColumn';
      PKFirstRecInCurrSet@1006 : Text[100];
      CurrSetLength@1004 : Integer;

    PROCEDURE SetColumns@6(SetWanted@1001 : 'Initial,Previous,Same,Next,PreviousSet,NextSet');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
    BEGIN
      MatrixMgt.GeneratePeriodMatrixData(SetWanted,ARRAYLEN(MatrixRecords),FALSE,PeriodType,DateFilter,PKFirstRecInCurrSet,
        MatrixColumnCaptions,ColumnSet,CurrSetLength,MatrixRecords);
      SetMatrix;
    END;

    PROCEDURE SetProductionForecastName@2(NextProductionForecastName@1000 : Text[30]);
    BEGIN
      NewProductionForecastName := NextProductionForecastName;
    END;

    PROCEDURE SetMatrix@1102601000();
    BEGIN
      CurrPage.Matrix.FORM.
      Load(MatrixColumnCaptions,MatrixRecords,ProductionForecastName,DateFilter,LocationFilter,ForecastType,QtyType
        ,CurrSetLength);
    END;

    LOCAL PROCEDURE ForecastTypeOnAfterValidate@19042274();
    BEGIN
      SetMatrix;
    END;

    LOCAL PROCEDURE QtyTypeOnAfterValidate@19050715();
    BEGIN
      SetMatrix;
    END;

    BEGIN
    END.
  }
}

