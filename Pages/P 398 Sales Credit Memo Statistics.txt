OBJECT Page 398 Sales Credit Memo Statistics
{
  OBJECT-PROPERTIES
  {
    Date=05.11.08;
    Time=12:00:00;
    Version List=NAVW16.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Verkaufsgutschriftsstatistik;
               ENU=Sales Credit Memo Statistics];
    LinksAllowed=No;
    SourceTable=Table114;
    PageType=ListPlus;
    OnAfterGetRecord=VAR
                       CostCalcMgt@1000 : Codeunit 5836;
                       CustLedgEntry@1001 : Record 21;
                     BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         Currency.InitRoundingPrecision
                       ELSE
                         Currency.GET("Currency Code");

                       SalesCrMemoLine.SETRANGE("Document No.","No.");
                       IF SalesCrMemoLine.FIND('-') THEN
                         REPEAT
                           CustAmount := CustAmount + SalesCrMemoLine.Amount;
                           AmountInclVAT := AmountInclVAT + SalesCrMemoLine."Amount Including VAT";
                           IF "Prices Including VAT" THEN
                             InvDiscAmount := InvDiscAmount + SalesCrMemoLine."Inv. Discount Amount" / (1 + SalesCrMemoLine."VAT %" / 100)
                           ELSE
                             InvDiscAmount := InvDiscAmount + SalesCrMemoLine."Inv. Discount Amount";
                           CostLCY := CostLCY + (SalesCrMemoLine.Quantity * SalesCrMemoLine."Unit Cost (LCY)");
                           LineQty := LineQty + SalesCrMemoLine.Quantity;
                           TotalNetWeight := TotalNetWeight + (SalesCrMemoLine.Quantity * SalesCrMemoLine."Net Weight");
                           TotalGrossWeight := TotalGrossWeight + (SalesCrMemoLine.Quantity * SalesCrMemoLine."Gross Weight");
                           TotalVolume := TotalVolume + (SalesCrMemoLine.Quantity * SalesCrMemoLine."Unit Volume");
                           IF SalesCrMemoLine."Units per Parcel" > 0 THEN
                             TotalParcels := TotalParcels + ROUND(SalesCrMemoLine.Quantity / SalesCrMemoLine."Units per Parcel",1,'>');
                           IF SalesCrMemoLine."VAT %" <> VATpercentage THEN
                             IF VATpercentage = 0 THEN
                               VATpercentage := SalesCrMemoLine."VAT %"
                             ELSE
                               VATpercentage := -1;
                           TotalAdjCostLCY := TotalAdjCostLCY + CostCalcMgt.CalcSalesCrMemoLineCostLCY(SalesCrMemoLine);
                         UNTIL SalesCrMemoLine.NEXT = 0;
                       VATAmount := AmountInclVAT - CustAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");

                       IF VATpercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATpercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := CustAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",CustAmount,"Currency Factor");

                       ProfitLCY := AmountLCY - CostLCY;

                       CustLedgEntry.SETCURRENTKEY("Document No.");
                       CustLedgEntry.SETRANGE("Document No.","No.");
                       CustLedgEntry.SETRANGE("Document Type",CustLedgEntry."Document Type"::"Credit Memo");
                       CustLedgEntry.SETRANGE("Customer No.","Bill-to Customer No.");
                       IF CustLedgEntry.FINDFIRST THEN
                         AmountLCY := CustLedgEntry."Sales (LCY)";

                       IF AmountLCY <> 0 THEN
                         ProfitPct := ROUND(100 * ProfitLCY / AmountLCY,0.1);

                       AdjProfitLCY := AmountLCY - TotalAdjCostLCY;
                       IF AmountLCY <> 0 THEN
                         AdjProfitPct := ROUND(100 * AdjProfitLCY / AmountLCY,0.1);

                       IF Cust.GET("Bill-to Customer No.") THEN
                         Cust.CALCFIELDS("Balance (LCY)")
                       ELSE
                         CLEAR(Cust);

                       CASE TRUE OF
                         Cust."Credit Limit (LCY)" = 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1:
                           CreditLimitLCYExpendedPct := 10000;
                         ELSE
                           CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);
                       END;

                       SalesCrMemoLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       CurrPage.Subform.FORM.SetTempVATAmountLine(TempVATAmountLine);
                       CurrPage.Subform.FORM.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,"VAT Base Discount %");
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 35  ;1   ;Group     ;
                CaptionML=[DEU=Allgemein;
                           ENU=General] }

    { 2   ;2   ;Field     ;
                CaptionML=[DEU=Betrag;
                           ENU=Amount];
                SourceExpr=CustAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 6   ;2   ;Field     ;
                CaptionML=[DEU=Rechnungsrabattbetrag;
                           ENU=Inv. Discount Amount];
                SourceExpr=InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 12  ;2   ;Field     ;
                CaptionML=[DEU=Gesamt;
                           ENU=Total];
                SourceExpr=CustAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 16  ;2   ;Field     ;
                CaptionML=[DEU=MwSt.-Betrag;
                           ENU=VAT Amount];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT (VATAmountText) }

    { 20  ;2   ;Field     ;
                CaptionML=[DEU=Total inkl. MwSt.;
                           ENU=Total Incl. VAT];
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 26  ;2   ;Field     ;
                CaptionML=[DEU=Verkauf (MW);
                           ENU=Sales (LCY)];
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 30  ;2   ;Field     ;
                CaptionML=[DEU=DB ursprÅnglich (MW);
                           ENU=Original Profit (LCY)];
                SourceExpr=ProfitLCY;
                AutoFormatType=1 }

    { 39  ;2   ;Field     ;
                CaptionML=[DEU=DB reguliert (MW);
                           ENU=Adjusted Profit (LCY)];
                SourceExpr=AdjProfitLCY;
                AutoFormatType=1 }

    { 32  ;2   ;Field     ;
                CaptionML=[DEU=DB ursprÅnglich %;
                           ENU=Original Profit %];
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct }

    { 41  ;2   ;Field     ;
                CaptionML=[DEU=DB reguliert %;
                           ENU=Adjusted Profit %];
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct }

    { 3   ;2   ;Field     ;
                CaptionML=[DEU=Menge;
                           ENU=Quantity];
                DecimalPlaces=0:5;
                SourceExpr=LineQty }

    { 13  ;2   ;Field     ;
                CaptionML=[DEU=Pakete;
                           ENU=Parcels];
                DecimalPlaces=0:5;
                SourceExpr=TotalParcels }

    { 7   ;2   ;Field     ;
                CaptionML=[DEU=Nettogewicht;
                           ENU=Net Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalNetWeight }

    { 10  ;2   ;Field     ;
                CaptionML=[DEU=Bruttogewicht;
                           ENU=Gross Weight];
                DecimalPlaces=0:5;
                SourceExpr=TotalGrossWeight }

    { 17  ;2   ;Field     ;
                CaptionML=[DEU=Volumen;
                           ENU=Volume];
                DecimalPlaces=0:5;
                SourceExpr=TotalVolume }

    { 28  ;2   ;Field     ;
                CaptionML=[DEU=Urspr.-Einstandsbetrag (MW);
                           ENU=Original Cost (LCY)];
                SourceExpr=CostLCY;
                AutoFormatType=1 }

    { 36  ;2   ;Field     ;
                CaptionML=[DEU=Lagerwert reguliert (MW);
                           ENU=Adjusted Cost (LCY)];
                SourceExpr=TotalAdjCostLCY;
                AutoFormatType=1 }

    { 44  ;2   ;Field     ;
                CaptionML=[DEU=Kostenregulierungsbetrag (MW);
                           ENU=Cost Adjmt. Amount (LCY)];
                SourceExpr=TotalAdjCostLCY - CostLCY;
                AutoFormatType=1;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries;
                         END;
                          }

    { 18  ;1   ;Part      ;
                Name=Subform;
                PagePartID=Page576;
                Editable=FALSE }

    { 1903289601;1;Group  ;
                CaptionML=[DEU=Debitor;
                           ENU=Customer] }

    { 24  ;2   ;Field     ;
                CaptionML=[DEU=Saldo (MW);
                           ENU=Balance (LCY)];
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1 }

    { 21  ;2   ;Field     ;
                CaptionML=[DEU=Kreditlimit (MW);
                           ENU=Credit Limit (LCY)];
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1 }

    { 1   ;2   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=[DEU=Kreditlimit (MW) Åberschritten %;
                           ENU=Expended % of Credit Limit (LCY)];
                ToolTipML=[DEU=Kreditlimit (MW) Åberschritten %;
                           ENU=Expended % of Credit Limit (LCY)];
                SourceExpr=CreditLimitLCYExpendedPct }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=MwSt.-Betrag;ENU=VAT Amount';
      Text001@1001 : TextConst 'DEU=%1% MwSt.;ENU=%1% VAT';
      CurrExchRate@1002 : Record 330;
      SalesCrMemoLine@1003 : Record 115;
      Cust@1004 : Record 18;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      Currency@1022 : Record 4;
      TotalAdjCostLCY@1025 : Decimal;
      CustAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      VATAmount@1009 : Decimal;
      CostLCY@1010 : Decimal;
      ProfitLCY@1011 : Decimal;
      ProfitPct@1012 : Decimal;
      AdjProfitLCY@1026 : Decimal;
      AdjProfitPct@1023 : Decimal;
      LineQty@1013 : Decimal;
      TotalNetWeight@1014 : Decimal;
      TotalGrossWeight@1015 : Decimal;
      TotalVolume@1016 : Decimal;
      TotalParcels@1017 : Decimal;
      AmountLCY@1018 : Decimal;
      CreditLimitLCYExpendedPct@1019 : Decimal;
      VATpercentage@1020 : Decimal;
      VATAmountText@1021 : Text[30];

    BEGIN
    END.
  }
}

